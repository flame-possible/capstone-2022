[{"D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\index.js":"1","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\blockchain\\connection.js":"2","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\FirstPage.js":"3","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\App.jsx":"4","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\SignUp.js":"5","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\Login.js":"6","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\All.js":"7","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\Temp.js":"8","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\Ray.js":"9","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\Pressure.js":"10","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\CCTV.js":"11","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\Admin.js":"12","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\CheckList.js":"13","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\Documents.js":"14","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\RejectedTransaction.js":"15","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\GrantTransaction.js":"16","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\WriteTransaction.js":"17","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\search_result.js":"18","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainNavbar\\MainNavbar.js":"19","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainFooter.js":"20","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainSidebar\\MainSidebar.js":"21","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pagination.js":"22","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\Editor.js":"23","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\common\\PageTitle.js":"24","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainNavbar\\NavbarSearch.js":"25","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainSidebar\\SidebarMainNavbar.js":"26","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainSidebar\\SidebarNavItems.js":"27","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainNavbar\\NavbarToggle.js":"28","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainSidebar\\SidebarSearch.js":"29","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainNavbar\\NavbarNav\\NavbarNav.js":"30","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\flux\\index.js":"31","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainSidebar\\SidebarNavItem.js":"32","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\elements\\CompleteFormExample.js":"33","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainNavbar\\NavbarNav\\UserActions.js":"34","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainNavbar\\NavbarNav\\Notifications.js":"35","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\flux\\dispatcher.js":"36","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\flux\\store.js":"37","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\flux\\constants.js":"38","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\data\\sidebar-nav-items.js":"39"},{"size":1471,"mtime":1667836448998,"results":"40","hashOfConfig":"41"},{"size":7976,"mtime":1667836448894,"results":"42","hashOfConfig":"41"},{"size":2789,"mtime":1667836448965,"results":"43","hashOfConfig":"41"},{"size":9926,"mtime":1667855415712,"results":"44","hashOfConfig":"41"},{"size":3945,"mtime":1667836448973,"results":"45","hashOfConfig":"41"},{"size":3900,"mtime":1667836448967,"results":"46","hashOfConfig":"41"},{"size":29691,"mtime":1667843604672,"results":"47","hashOfConfig":"41"},{"size":10024,"mtime":1667836448974,"results":"48","hashOfConfig":"41"},{"size":10020,"mtime":1667836448971,"results":"49","hashOfConfig":"41"},{"size":10040,"mtime":1667836448969,"results":"50","hashOfConfig":"41"},{"size":10024,"mtime":1667836448960,"results":"51","hashOfConfig":"41"},{"size":5902,"mtime":1667836448956,"results":"52","hashOfConfig":"41"},{"size":24633,"mtime":1667836448961,"results":"53","hashOfConfig":"41"},{"size":9247,"mtime":1667836448963,"results":"54","hashOfConfig":"41"},{"size":32280,"mtime":1667856441027,"results":"55","hashOfConfig":"41"},{"size":37522,"mtime":1667855415721,"results":"56","hashOfConfig":"41"},{"size":766,"mtime":1667836448976,"results":"57","hashOfConfig":"41"},{"size":10115,"mtime":1667836448977,"results":"58","hashOfConfig":"41"},{"size":1088,"mtime":1667836448940,"results":"59","hashOfConfig":"41"},{"size":1434,"mtime":1667836448939,"results":"60","hashOfConfig":"41"},{"size":2008,"mtime":1667836448949,"results":"61","hashOfConfig":"41"},{"size":1577,"mtime":1667836448978,"results":"62","hashOfConfig":"41"},{"size":551,"mtime":1667836448909,"results":"63","hashOfConfig":"41"},{"size":724,"mtime":1667836448924,"results":"64","hashOfConfig":"41"},{"size":1846,"mtime":1667836448946,"results":"65","hashOfConfig":"41"},{"size":2070,"mtime":1667836448950,"results":"66","hashOfConfig":"41"},{"size":1004,"mtime":1667836448952,"results":"67","hashOfConfig":"41"},{"size":742,"mtime":1667836448947,"results":"68","hashOfConfig":"41"},{"size":701,"mtime":1667836448954,"results":"69","hashOfConfig":"41"},{"size":296,"mtime":1667836448942,"results":"70","hashOfConfig":"41"},{"size":162,"mtime":1667836448936,"results":"71","hashOfConfig":"41"},{"size":864,"mtime":1667836448951,"results":"72","hashOfConfig":"41"},{"size":29573,"mtime":1667855415715,"results":"73","hashOfConfig":"41"},{"size":5760,"mtime":1667856000718,"results":"74","hashOfConfig":"41"},{"size":2475,"mtime":1667836448943,"results":"75","hashOfConfig":"41"},{"size":72,"mtime":1667836448935,"results":"76","hashOfConfig":"41"},{"size":1153,"mtime":1667836448937,"results":"77","hashOfConfig":"41"},{"size":79,"mtime":1667836448934,"results":"78","hashOfConfig":"41"},{"size":968,"mtime":1667836448930,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"6054ly",{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"83"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"83"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"83"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"83"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"83"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"83"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"83"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"83"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"83"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"83"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"83"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"83"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"83"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"83"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"83"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"83"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"83"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"83"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"83"},"D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\index.js",["185","186","187","188"],"// import React from 'react';\r\n// import ReactDOM from 'react-dom/client';\r\n// import './index.css';\r\n// import Connection from './blockchain/connection';\r\n// import {BrowserRouter as Router} from 'react-router-dom';\r\n\r\n// const root = ReactDOM.createRoot(document.getElementById('root'));\r\n// root.render(\r\n//   <Router>\r\n//     <Connection />\r\n//   </Router>\r\n// );\r\n\r\n// import React from 'react';\r\n// import ReactDOM from 'react-dom/client';\r\n// import './index.css';\r\n// import Connection from './blockchain/connection';\r\n// import {BrowserRouter as Router, Routes, Route} from 'react-router-dom';\r\n// import FirstPage from './components/pages/FirstPage';\r\n// import All from './components/pages/All';\r\n// import { Navigate } from 'react-router-dom';\r\n\r\n// const root = ReactDOM.createRoot(document.getElementById('root'));\r\n// root.render(\r\n//   <Router>\r\n//     <Routes>\r\n//         <Route exact path=\"/\" element={<FirstPage />} />\r\n//         <Route path=\"/connect\" element={<Connection />} />\r\n//     </Routes>\r\n//   </Router>\r\n// );\r\n\r\n\r\n\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport Connection from './blockchain/connection';\r\nimport FirstPage from './components/pages/FirstPage';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Router>\r\n    <FirstPage />\r\n  </Router>\r\n);",["189","190"],"D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\blockchain\\connection.js",["191","192","193","194","195","196","197","198"],"import React, { useEffect, useState, useRef } from \"react\";\r\n// import {FileUpload} from './components/FileUpload';\r\nimport TransactionContract from \"../contracts/Transaction.json\"\r\nimport Web3 from 'web3';\r\nimport moment from \"moment\";\r\nimport axios from 'axios';\r\n// import Login from './login';\r\n// import Signup from './signup';\r\nimport App from '../App.jsx';\r\n\r\n\r\n\r\nexport default function Connection() {\r\n  // const [fileUrl, setFileUrl] = useState(\"\");\r\n  // const [web3, setWeb3] = useState(\"\");\r\n  // const [account, setAccount] = useState(\"\");\r\n  // const [transactionInstance, setTransactionInstance] = useState(\"\");\r\n  // const [loading, setLoading] = useState(false);\r\n\r\n  // const [category, setCategory] = useState(\"\");\r\n  // const [name, setName] = useState(\"\");\r\n  // const [ipfsHash, setIpfsHash] = useState(\"\");\r\n  // const [registrant, setRegsitrant] = useState(\"\");\r\n  // const [responsibleManager, setResponsibleManager] = useState(\"\");\r\n  // const [fileType, setFileType] = useState(\"\");\r\n  // const [fileDescription, setFileDescription] = useState(\"\");\r\n  // const [transactionCnt, setTransactionCnt] = useState(\"\");\r\n\r\n  // const [time, setTime] = useState(\"\");\r\n  // const [ipfsHash_, setIpfsHash_] = useState(\"\");\r\n  // const [category_, setCategory_] = useState(\"\");\r\n  // const [name_, setName_] = useState(\"\");\r\n  // const [registrant_, setRegsitrant_] = useState(\"\");\r\n  // const [responsibleManager_, setResponsibleManager_] = useState(\"\");\r\n  // const [fileType_, setFileType_] = useState(\"\");\r\n  // const [fileDescription_, setFileDescription_] = useState(\"\");\r\n\r\n  // const submitReview = ()=>{\r\n  //   Axios.post('http://localhost:3001/api/insert', {\r\n  //     category: category,\r\n  //     name: name,\r\n  //     time: time,\r\n  //     ipfsHash: ipfsHash,\r\n  //     registrant: registrant,\r\n  //     responsible: responsibleManager,\r\n  //     filetype: fileType,\r\n  //     filedes: fileDescription\r\n  //   }).then(()=>{\r\n  //     alert('등록 완료!');\r\n  //   })\r\n  // };\r\n\r\n\r\n  const [web3, setWeb3] = useState(\"\");\r\n  const [account, setAccount] = useState(\"\");\r\n  const [transactionInstance, setTransactionInstance] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  \r\n  const [block_list, setblock_list] = useState([]);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    async function componentWillMount(e) {\r\n      const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\r\n      setWeb3(web3);\r\n      console.log(web3)\r\n      const contract = require(\"truffle-contract\");\r\n      const transaction = contract(TransactionContract);\r\n      console.log(web3);\r\n      transaction.setProvider(web3.currentProvider);\r\n  \r\n      web3.eth.getAccounts((error, accounts) => {\r\n        if (!error){\r\n          transaction.deployed().then(instance => {\r\n            setTransactionInstance(instance);\r\n            let temp = 0;\r\n            if(sessionStorage.getItem('company') == 'SDS') temp = 0;\r\n            else if(sessionStorage.getItem('company') == 'KLL') temp = 1;\r\n            else if(sessionStorage.getItem('company') == 'KOR') temp = 2;\r\n            else if(sessionStorage.getItem('company') == 'LOS') temp = 3;\r\n            setAccount(accounts[temp]);\r\n            setLoading(true);\r\n          })\r\n        }\r\n      })\r\n      \r\n    }\r\n\r\n    componentWillMount();    \r\n\r\n  }, []);\r\n\r\n  const nextId = useRef(1);\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n\r\n    async function updateAllTransactions(e){\r\n      let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\r\n      \r\n\r\n\r\n      for(let i = 0; i < events.length; i += 1){\r\n        \r\n        var time_ = moment.unix(events[i].returnValues.time);\r\n        \r\n        block_list.push({\r\n          id: nextId.current,\r\n          category : events[i].returnValues.category.toString(),\r\n          name : events[i].returnValues.name.toString(),\r\n          time : time_.toString(), \r\n          ipfsHash : events[i].returnValues.ipfs_hash.toString(),\r\n          registrant : events[i].returnValues.registrant.toString(),\r\n          responsible : events[i].returnValues.responsible_manager.toString(),\r\n          filetype : events[i].returnValues.file_type.toString(),\r\n          filedes : events[i].returnValues.file_description.toString()\r\n        }\r\n        )\r\n        \r\n        nextId.current += 1;\r\n\r\n        console.log(events[i].returnValues);\r\n      }\r\n      console.log('events.length = ', events.length);\r\n      console.log(events);\r\n      console.log('block_list = ', block_list);\r\n      console.log(account);\r\n  \r\n    }\r\n\r\n    if (loading == true){\r\n      \r\n      console.log(\"CCtv data: \")\r\n\r\n      axios.post('http://localhost:3001/sendCCTV', null, {\r\n        params: {\r\n        }\r\n      })\r\n      .then(async res => {\r\n        console.log(res)\r\n\r\n        let Regsitrant = \"Kim\"\r\n        let Responsible = \"Kim\"\r\n\r\n\r\n        for(let i = 0; i < res.data.length; i++){\r\n          \r\n          \r\n          let Filename = \"Sector 1 \"\r\n          Filename += res.data[i].time\r\n          let Filedes = \"Sector 1 \"\r\n          Filedes += res.data[i].time\r\n\r\n          await transactionInstance.sendTrans(\"CCTV\", Filename, res.data[i].ipfs_hash, Regsitrant, Responsible, \"avi\", Filedes,{\r\n            from: account,\r\n            //value: e.web3.utils.toWei('10', \"ether\"),\r\n            gas: 1000000\r\n          })\r\n        }\r\n\r\n      })\r\n      .catch()\r\n\r\n\r\n\r\n      updateAllTransactions();\r\n    }\r\n\r\n}, [loading]);\r\n\r\n\r\n\r\n  // const sendTransaction = async (e) => {\r\n  //   console.log(web3);\r\n  //   console.log(account);\r\n  //   console.log(transactionInstance);\r\n  //   await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\r\n  //     from: account,\r\n  //     //value: e.web3.utils.toWei('10', \"ether\"),\r\n  //     gas: 1000000\r\n  //   })\r\n    \r\n  //   let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\r\n  //   console.log(events[events.length-1].transactionHash)\r\n  //   //this.updateAllTransactions();\r\n\r\n  //   submitReview();\r\n  // }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* <Login />\r\n      <Signup />\r\n      <input type=\"text\" placeholder=\"Type\" onChange = {(event) => setCategory(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Name\" onChange = {(event) => setName(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Registrant\" onChange = {(event) => setRegsitrant(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"Responsible Manager\" onChange = {(event) => setResponsibleManager(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"File Type\" onChange = {(event) => setFileType(event.target.value)}></input>\r\n      <br></br>\r\n      <input type=\"text\" placeholder=\"File Description\" onChange = {(event) => setFileDescription(event.target.value)}></input>\r\n      <br></br>\r\n      \r\n      <FileUpload setUrl={setFileUrl} setIpfs={setIpfsHash} />\r\n      FileUrl :{\" \"}\r\n      <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        {fileUrl}\r\n      </a>\r\n      <br></br>\r\n\r\n      <p>Your account: {account}</p>\r\n      <br></br>\r\n\r\n      <button onClick={sendTransaction}>\r\n        트랜잭션 추가\r\n      </button>\r\n      {/* <button onClick={updateAllTransactions}>\r\n        트랜잭션 보여주기\r\n      </button> *//*}\r\n      <br></br>\r\n\r\n      <p>all transactions:</p>\r\n      <br></br>\r\n      <p>Category: {category_}</p>\r\n      <p>File Name: {name_}</p>\r\n      <p>Time: {time}</p>\r\n      <p>IPFS Hash: {ipfsHash_}</p>\r\n      <p>Registrant: {registrant_}</p>\r\n      <p>Responsible Manager: {responsibleManager_}</p>\r\n      <p>File Type: {fileType_}</p>\r\n      <p>File Description: {fileDescription_}</p> */}\r\n      <App block_list={block_list} transactionInstance={transactionInstance} account={account}/>\r\n    </div>\r\n  )\r\n}","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\FirstPage.js",["199","200","201","202","203","204"],"// import React from 'react'\r\n// import '../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\n// import '../../App.css'\r\n// import { Routes, Route, Link } from 'react-router-dom'\r\n\r\n// import Login from './Login'\r\n// import SignUp from './SignUp'\r\n// import MainNavbar from '../layout/MainNavbar/MainNavbar'\r\n// import Connection from '../../blockchain/connection'\r\n\r\n// export default function FirstPage() {\r\n//   return (\r\n//     <div className=\"App\">\r\n//     <nav className=\"navbar navbar-expand-lg navbar-light fixed-top\">\r\n//         <div className=\"container\">\r\n//         {<MainNavbar />}\r\n//         <Link className=\"navbar-brand\" to={'/sign-in'}>\r\n//             positronX\r\n//         </Link>\r\n//         <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n//             <ul className=\"navbar-nav ml-auto\">\r\n//             <li className=\"nav-item\">\r\n//                 <Link className=\"nav-link\" to={'/sign-in'}>\r\n//                 Login\r\n//                 </Link>\r\n//             </li>\r\n//             <li className=\"nav-item\">\r\n//                 <Link className=\"nav-link\" to={'/sign-up'}>\r\n//                 Sign up\r\n//                 </Link>\r\n//             </li>\r\n//             </ul>\r\n//         </div>\r\n//         </div>\r\n//     </nav>\r\n\r\n//     <div className=\"auth-wrapper\">\r\n//         <div className=\"auth-inner\">\r\n//         <Routes>\r\n//             <Route exact path=\"/\" element={<Login />} />\r\n//             <Route path=\"/sign-in\" element={<Login />} />\r\n//             <Route path=\"/sign-up\" element={<SignUp />} />\r\n//         </Routes>\r\n//         </div>\r\n//     </div>\r\n//     </div>\r\n//   )\r\n// };\r\n\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\n\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport '../../App.css'\r\nimport { Routes, Route, Link } from 'react-router-dom'\r\n\r\nimport Login from './Login'\r\nimport SignUp from './SignUp'\r\nimport Connection from '../../blockchain/connection';\r\n\r\nexport default function FirstPage() {\r\n   // 로그인 상태 관리\r\n   const [isLogin, setIsLogin] = useState(false)\r\n \r\n   useEffect(() => {\r\n     if(sessionStorage.getItem('user_id') === null){\r\n     // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 없다면\r\n       console.log('isLogin ?? :: ', isLogin)\r\n     } else {\r\n     // sessionStorage 에 user_id 라는 key 값으로 저장된 값이 있다면\r\n     // 로그인 상태 변경\r\n       setIsLogin(true)\r\n       console.log('isLogin ?? :: ', isLogin)\r\n     }\r\n     \r\n    // sessionStorage.removeItem('search')\r\n   })\r\n\r\n  return (\r\n    \r\n    <div>\r\n\r\n        {isLogin ? \r\n      \t// Main 컴포넌트 호출 시 isLogin 이라는 props 값을 전달\r\n        <Connection/> : \r\n        <Login />}\r\n    </div>\r\n  )\r\n};","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\App.jsx",["205","206","207","208","209","210","211"],"// import React, { useEffect, useState } from \"react\";\r\n// import {FileUpload} from './components/FileUpload';\r\n// import \"./App.css\";\r\n// import TransactionContract from \"../src/contracts/Transaction.json\"\r\n// import Web3 from 'web3';\r\n// import moment from \"moment\";\r\n// import Axios from 'axios';\r\n// import Login from './login';\r\n// import Signup from './signup';\r\n\r\n\r\n\r\n// export default function App() {\r\n//   const [fileUrl, setFileUrl] = useState(\"\");\r\n//   const [web3, setWeb3] = useState(\"\");\r\n//   const [account, setAccount] = useState(\"\");\r\n//   const [transactionInstance, setTransactionInstance] = useState(\"\");\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   const [category, setCategory] = useState(\"\");\r\n//   const [name, setName] = useState(\"\");\r\n//   const [ipfsHash, setIpfsHash] = useState(\"\");\r\n//   const [registrant, setRegsitrant] = useState(\"\");\r\n//   const [responsibleManager, setResponsibleManager] = useState(\"\");\r\n//   const [fileType, setFileType] = useState(\"\");\r\n//   const [fileDescription, setFileDescription] = useState(\"\");\r\n//   const [transactionCnt, setTransactionCnt] = useState(\"\");\r\n\r\n//   const [time, setTime] = useState(\"\");\r\n//   const [ipfsHash_, setIpfsHash_] = useState(\"\");\r\n//   const [category_, setCategory_] = useState(\"\");\r\n//   const [name_, setName_] = useState(\"\");\r\n//   const [registrant_, setRegsitrant_] = useState(\"\");\r\n//   const [responsibleManager_, setResponsibleManager_] = useState(\"\");\r\n//   const [fileType_, setFileType_] = useState(\"\");\r\n//   const [fileDescription_, setFileDescription_] = useState(\"\");\r\n\r\n//   const submitReview = ()=>{\r\n//     Axios.post('http://localhost:3001/api/insert', {\r\n//       category: category,\r\n//       name: name,\r\n//       time: time,\r\n//       ipfsHash: ipfsHash,\r\n//       registrant: registrant,\r\n//       responsible: responsibleManager,\r\n//       filetype: fileType,\r\n//       filedes: fileDescription\r\n//     }).then(()=>{\r\n//       alert('등록 완료!');\r\n//     })\r\n//   };\r\n\r\n\r\n//   useEffect(() => {\r\n//     async function componentWillMount(e) {\r\n//       const web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:8545'));\r\n//       setWeb3(web3);\r\n//       console.log(web3)\r\n//       const contract = require(\"truffle-contract\");\r\n//       const transaction = contract(TransactionContract);\r\n//       console.log(web3);\r\n//       transaction.setProvider(web3.currentProvider);\r\n  \r\n//       web3.eth.getAccounts((error, accounts) => {\r\n//         if (!error){\r\n//           transaction.deployed().then(instance => {\r\n//             setTransactionInstance(instance);\r\n//             setAccount(accounts[0]);\r\n//             setLoading(true);\r\n//           })\r\n//         }\r\n//       })\r\n      \r\n//     }\r\n\r\n//     componentWillMount();\r\n//     // setTimeout(() => {  console.log(\"World!\"); }, 1000);\r\n//     // updateAllTransactions();\r\n\r\n    \r\n\r\n//   }, []);\r\n\r\n\r\n//   useEffect(() => {\r\n\r\n//     async function updateAllTransactions(e){\r\n//       let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\r\n//       for(let i=0; i<events.length; i+=1){\r\n//         const record = {};\r\n//         var time_ = moment.unix(events[i].returnValues.time);\r\n\r\n//         setCategory_(events[i].returnValues.category.toString());\r\n//         setName_(events[i].returnValues.name.toString());\r\n//         setTime(time_.toString());\r\n//         setIpfsHash_(events[i].returnValues.ipfs_hash.toString());\r\n//         setRegsitrant_(events[i].returnValues.registrant.toString());\r\n//         setResponsibleManager_(events[i].returnValues.responsible_manager.toString());\r\n//         setFileType_(events[i].returnValues.file_type.toString());\r\n//         setFileDescription_(events[i].returnValues.file_description.toString());\r\n//         setTransactionCnt(transactionInstance.cntTransactions());\r\n//         console.log(events[i].returnValues);\r\n//       }\r\n//       console.log(events.length);\r\n//       console.log(events);\r\n  \r\n//     }\r\n\r\n//     if (loading == true) updateAllTransactions();\r\n\r\n// }, [loading]);\r\n\r\n\r\n//   const sendTransaction = async (e) => {\r\n//     console.log(web3);\r\n//     console.log(account);\r\n//     console.log(transactionInstance);\r\n//     await transactionInstance.sendTrans(category, name, ipfsHash, registrant, responsibleManager, fileType, fileDescription,{\r\n//       from: account,\r\n//       //value: e.web3.utils.toWei('10', \"ether\"),\r\n//       gas: 1000000\r\n//     })\r\n    \r\n//     let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\r\n//     console.log(events[events.length-1].transactionHash)\r\n//     //this.updateAllTransactions();\r\n\r\n//     submitReview();\r\n//   }\r\n\r\n\r\n\r\n\r\n//   return (\r\n//     <div>\r\n//       <Login />\r\n//       <Signup />\r\n//       <input type=\"text\" placeholder=\"Type\" onChange = {(event) => setCategory(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"Name\" onChange = {(event) => setName(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"Registrant\" onChange = {(event) => setRegsitrant(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"Responsible Manager\" onChange = {(event) => setResponsibleManager(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"File Type\" onChange = {(event) => setFileType(event.target.value)}></input>\r\n//       <br></br>\r\n//       <input type=\"text\" placeholder=\"File Description\" onChange = {(event) => setFileDescription(event.target.value)}></input>\r\n//       <br></br>\r\n      \r\n//       <FileUpload setUrl={setFileUrl} setIpfs={setIpfsHash} />\r\n//       FileUrl :{\" \"}\r\n//       <a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//         {fileUrl}\r\n//       </a>\r\n//       <br></br>\r\n\r\n//       <p>Your account: {account}</p>\r\n//       <br></br>\r\n\r\n//       <button onClick={sendTransaction}>\r\n//         트랜잭션 추가\r\n//       </button>\r\n//       {/* <button onClick={updateAllTransactions}>\r\n//         트랜잭션 보여주기\r\n//       </button> */}\r\n//       <br></br>\r\n\r\n//       <p>all transactions:</p>\r\n//       <br></br>\r\n//       <p>Category: {category_}</p>\r\n//       <p>File Name: {name_}</p>\r\n//       <p>Time: {time}</p>\r\n//       <p>IPFS Hash: {ipfsHash_}</p>\r\n//       <p>Registrant: {registrant_}</p>\r\n//       <p>Responsible Manager: {responsibleManager_}</p>\r\n//       <p>File Type: {fileType_}</p>\r\n//       <p>File Description: {fileDescription_}</p>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport { Route, Routes,  Navigate } from \"react-router-dom\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles/shards-dashboards.1.1.0.min.css\";\r\n\r\nimport Ray from \"./components/pages/Ray\";\r\nimport MainSidebar from \"./components/layout/MainSidebar/MainSidebar\";\r\nimport CCTV from \"./components/pages/CCTV\";\r\nimport All from \"./components/pages/All\";\r\nimport Pressure from \"./components/pages/Pressure\";\r\nimport Temp from \"./components/pages/Temp\";\r\nimport CheckList from \"./components/pages/CheckList\";\r\nimport Documents from \"./components/pages/Documents\";\r\nimport Admin from \"./components/pages/Admin\"\r\nimport RejectedTransaction from \"./components/pages/RejectedTransaction\"\r\nimport GrantTransaction from \"./components/pages/GrantTransaction\"\r\n\r\nimport { Container, Row, Col } from \"shards-react\";\r\nimport MainNavbar from \"./components/layout/MainNavbar/MainNavbar\";\r\nimport MainFooter from \"./components/layout/MainFooter\";\r\n\r\nimport WriteTransaction from \"./components/pages/WriteTransaction\"\r\n\r\nimport \"./App.css\";\r\nimport TransactionContract from \"../src/contracts/Transaction.json\"\r\nimport Web3 from 'web3';\r\nimport moment from \"moment\";\r\nimport Search_Result from \"./components/pages/search_result\";\r\n\r\nexport default function App({block_list, transactionInstance, account}) {\r\n  \r\n  console.log(\"App!!!\")\r\n\r\n  return(\r\n      <Container fluid>\r\n        <Row>\r\n          <MainSidebar/>\r\n          <Col\r\n            className=\"main-content p-0\"\r\n            lg={{ size: 10, offset: 2 }}\r\n            md={{ size: 9, offset: 3 }}\r\n            sm=\"12\"\r\n            tag=\"main\"\r\n          >\r\n            {<MainNavbar />}\r\n            <Routes>\r\n              <Route path=\"/\" element={<Navigate to=\"/all\"/>} />\r\n              <Route path=\"/all\" element={<All transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/cctv\" element={<CCTV transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/documents\" element={<Documents transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/checklist\" element={<CheckList transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/search_result\" element={<Search_Result transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/temp\" element={<Temp transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/pressure\" element={<Pressure transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/ray\" element={<Ray transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/writetransaction\" element={<WriteTransaction transactionInstance={transactionInstance} account={account} />}/>\r\n              <Route path=\"/admin\" element={<Admin transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/rejectedTransaction\" element={<RejectedTransaction transactionInstance={transactionInstance}/>} />\r\n              <Route path=\"/grantTransaction\" element={<GrantTransaction transactionInstance={transactionInstance} account={account}/>} />\r\n            </Routes>\r\n            <br></br><br></br>\r\n            {<MainFooter />}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n  )\r\n};","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\SignUp.js",["212","213","214","215","216","217","218","219"],"import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nimport Connection from '../../blockchain/connection'\r\n\r\nimport \"../../\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../styles/shards-dashboards.1.1.0.min.css\"\r\n\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport moment from \"moment\";\r\nimport Axios from 'axios';\r\n\r\nexport default function SignUp()  {\r\n  const [CompanySelect, setCompanySelect] = useState(\"\")\r\n  const [ID, setID] = useState(\"\")\r\n  const [Password, setPassword] = useState(\"\")\r\n  const [Password2, setPassword2] = useState(\"\")\r\n  const [Name, setName] = useState(\"\")\r\n  const [Email, setEmail] = useState(\"\")\r\n\r\n  const Company_select = (e) => {\r\n    setCompanySelect(e.target.value);\r\n    console.log(CompanySelect);\r\n  };\r\n\r\n  \r\n\r\n  const onClickLogin = () => {\r\n    Axios.post('http://localhost:3001/signup', null, {\r\n        params: {\r\n        'id': ID,\r\n        'pw': Password2,\r\n        'nick': ' ',\r\n        'email': Email,\r\n        'name': Name,\r\n        'company': CompanySelect\r\n        }\r\n    })\r\n    .then(res => {\r\n    \r\n      console.log(res)\r\n      alert('등록 완료')\r\n      document.location.href = '/'\r\n    })\r\n    .catch()\r\n  }\r\n\r\n  return(\r\n      <ListGroup flush>\r\n      <ListGroupItem className=\"p-3\">\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputState\">회사</label>\r\n                <FormSelect id=\"feInputState\" size=\"lg\" style={{fontSize: \".875rem\"}} value={CompanySelect} onChange={Company_select}>\r\n                  <option value = \"선택\">선택</option>\r\n                  <option value = \"SDS\">SDS</option>\r\n                  <option value = \"KLL\">KLL</option>\r\n                  <option value = \"KOR\">KOR</option>\r\n                  <option value = \"LOS\">LOS</option>\r\n                </FormSelect>\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress\">아이디</label>\r\n                <FormInput \r\n                id=\"feInputAddress\"  \r\n                size=\"lg\" \r\n                onChange = {(event) => setID(event.target.value)}/>\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">비밀번호</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  type='password'\r\n                  size=\"lg\"\r\n                  onChange = {(event) => setPassword(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">비밀번호 재확인</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  type='password'\r\n                  size=\"lg\"\r\n                  onChange = {(event) => setPassword2(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">이름</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  size=\"lg\"\r\n                  onChange = {(event) => setName(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputAddress2\">이메일</label>\r\n                <FormInput\r\n                  id=\"feInputAddress2\"\r\n                  size=\"lg\"\r\n                  onChange = {(event) => setEmail(event.target.value)}\r\n                />\r\n              </FormGroup>\r\n              <br></br>\r\n              <Button block size=\"lg\" theme=\"secondary\" className=\"mb-1 mr-1\" onClick={onClickLogin}>회원가입</Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </ListGroupItem>\r\n    </ListGroup>\r\n  )\r\n}","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\Login.js",["220","221","222","223","224","225","226","227"],"import React, { useRef, useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nimport Connection from '../../blockchain/connection'\r\n\r\nimport \"../../\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../../styles/shards-dashboards.1.1.0.min.css\"\r\n\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport moment from \"moment\";\r\nimport Axios from 'axios';\r\nimport SignUp from './SignUp'\r\n\r\nexport default function Login()  {\r\n    const [inputId, setinputId] = useState(\"\")\r\n    const [inputPw, setinputPw] = useState(\"\")\r\n    const [signup, setsignup] = useState(false)\r\n\r\n    let navigate = useNavigate();\r\n    const routeChange = () => {\r\n        let path = '/connect';\r\n        navigate(path);\r\n    }\r\n\r\n\r\n    const onClickLogin = () => {\r\n        Axios.post('http://localhost:3001/onLogin', null, {\r\n            params: {\r\n            'user_id': inputId,\r\n            'user_pw': inputPw\r\n            }\r\n        })\r\n        .then(res => {\r\n            console.log(res)\r\n            if(res.data.msg)\r\n                alert(res.data.msg);\r\n            else{\r\n                sessionStorage.setItem('user_id', inputId)\r\n                sessionStorage.setItem('company', res.data.company)\r\n            }\r\n            document.location.href = '/'\r\n        })\r\n        .catch()\r\n    }\r\n\r\n\r\n    return (\r\n    <div className=\"App\">\r\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    <div className=\"auth-wrapper\">\r\n        &nbsp;&nbsp;&nbsp;\r\n        <div className=\"auth-inner\">\r\n        <Link to={'/'} style ={{textDecoration: \"none\"}}>\r\n        <h2 style ={{ \r\n                        fontWeight: \"bold\"\r\n                        }}>&nbsp;&nbsp;&nbsp;Safety Management</h2>\r\n        </Link>\r\n        <br></br>\r\n        {\r\n            signup ? <SignUp />\r\n            : \r\n            <div>\r\n            <ListGroup flush>\r\n            <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                    <Col>\r\n                        <form>\r\n                            <FormGroup>\r\n                                <FormInput id=\"feInputAddress\" size=\"lg\" placeholder=\"아이디\" onChange = {(event) => setinputId(event.target.value)}/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <FormInput\r\n                                type='password'\r\n                                id=\"feInputAddress2\"\r\n                                size=\"lg\"\r\n                                placeholder=\"비밀번호\"\r\n                                onChange = {(event) => setinputPw(event.target.value)}\r\n                                />\r\n                            </FormGroup>\r\n                            <br></br>\r\n                            <Button block size=\"lg\" theme=\"secondary\" className=\"mb-1 mr-1\" onClick={onClickLogin}>로그인</Button>\r\n                            \r\n                            <Button block size=\"lg\" theme=\"secondary\" className=\"mb-1 mr-1\" outline onClick={(event) => setsignup(true)}>\r\n                                회원가입\r\n                            </Button>\r\n                        </form>\r\n                    </Col>\r\n                </Row>\r\n            </ListGroupItem>\r\n        </ListGroup>\r\n        {/* <div className=\"login\">\r\n            <Button onClick={(event) => setsignup(true)}>\r\n                <p stlye ={{  left: \"50%\",\r\n                                top: \"69%\",\r\n                                transform: \"translate(-50%, -50%)\",\r\n                                position: \"absolute\",\r\n                                color: \"#5a6169\"}}>회원가입</p>\r\n            </Button>\r\n        </div> */}\r\n        </div>\r\n        }\r\n        \r\n      </div>\r\n      &nbsp;&nbsp;&nbsp;\r\n      </div>\r\n      </div>\r\n    )\r\n}","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\All.js",["228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Pagination from \"../pagination.js\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\n\r\nfunction All({transactionInstance}){\r\n  \r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [block_list, setblock_list] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [first, setFirst] = useState(false);\r\n\r\n  const [detail, setDetail] = useState(false);\r\n  const [detailcnt, setDetailcnt] = useState(-1);\r\n\r\n  const detail_click = (cnt) => {\r\n    setDetail(true);\r\n    setDetailcnt(cnt);\r\n  }\r\n\r\n  function repeatboardchild(child, start){\r\n    if(loading){\r\n\r\n      let arr = [];\r\n\r\n      if(start == 1) start = 0;\r\n      else{\r\n        start--;\r\n        start *= 10;\r\n      }\r\n  \r\n      let end = start + 10;\r\n  \r\n      if (end > child.length){\r\n        end = child.length;\r\n      }\r\n  \r\n      console.log('child = ', child);\r\n      \r\n      console.log('child.length = %d', child.length);\r\n      for(let i = start; i < end; i++){\r\n        console.log('i = %d, start = %d, end = %d', i, start, end);\r\n        console.log(sessionStorage.getItem('search'));\r\n        console.log(child[i].des1);\r\n        // if(sessionStorage.getItem('search') === null){\r\n          if (child[i].des1 == 0 || child[i].des1 == 1){\r\n            arr.push(\r\n              <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n                <th scope=\"row\" >{i+1}</th>\r\n                <td >{child[i].checktype}</td>\r\n                <td>{child[i].responsible}</td>\r\n                <td>{child[i].filetype}</td>\r\n                <td>{child[i].filedes}</td>\r\n                <td>{child[i].real_time}</td>\r\n              </tr>\r\n              )\r\n          }\r\n          else{\r\n            arr.push(\r\n              <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n                <th scope=\"row\" >{i+1}</th>\r\n                <td >{child[i].name}</td>\r\n                <td>{child[i].responsible}</td>\r\n                <td>{child[i].filetype}</td>\r\n                <td>{child[i].filedes}</td>\r\n                <td>{child[i].real_time}</td>\r\n              </tr>\r\n              )\r\n          }\r\n        // }\r\n        // else if(sessionStorage.getItem('search') === child[i].name || sessionStorage.getItem('search') === child[i].responsible || sessionStorage.getItem('search') === child[i].filetype || sessionStorage.getItem('search') === child[i].filedes){\r\n        //   arr.push(\r\n        //     <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n        //       <th scope=\"row\" >{i+1}</th>\r\n        //       <td >{child[i].name}</td>\r\n        //       <td>{child[i].responsible}</td>\r\n        //       <td>{child[i].filetype}</td>\r\n        //       <td>{child[i].filedes}</td>\r\n        //       <td>{child[i].time}</td>\r\n        //     </tr>\r\n        //     )\r\n        // }\r\n      }\r\n  \r\n      return arr;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  function Showboard(){\r\n\r\n    console.log(first);\r\n    console.log(detail);\r\n\r\n    if(!detail && first){\r\n      return (\r\n        <div>\r\n        <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            />\r\n            </div>\r\n      )\r\n    }\r\n    else if ((detail && first)){\r\n\r\n      if(block_list[detailcnt].checktype == \"Electricity\"){\r\n\r\n        return (\r\n          \r\n          <Row>\r\n            <Col lg=\"7\" md=\"12\">\r\n            <Card small>\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\">Form Example</h6>\r\n            </CardHeader>\r\n              <ListGroup flush>\r\n              <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                  <Col>\r\n                        <label htmlFor=\"feInputState\">카테고리</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].category}\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress\">체크리스트 타입</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].checktype}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">1. 감전위험이 있는 전기 기계·기구 또는 전로의 설치·해체·정비·점검 등의 작업을 하는 하는 경우 작업자의 자격을 확인하였다.</label>\r\n                        <br></br>\r\n                      {block_list[detailcnt].des1 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">2. 감전의 위험이 있는 작업에 종사하는 경우 절연용 보호구를 지급하고 작업자에게 착용하도록 하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des2 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">3. 가공전로에 근접하여 비계를 설치하는 경우에는 가공전로를 이설하거나 가공전로에 절연용 방호구를 장착하는 등 가공전로와의 접촉을 방지하기 위해 조치 하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des3 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">4. 임시 수전설비의 주변은 관계 작업자가 아닌 사람의 출입을 금지하고, 위험표시 등의 방법으로 방호를 강화하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des4 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">5. 가설 배전반·분전반은 충전부가 노출되지 않도록 폐쇄형 외함이 있는 구조로 설치하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des5 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">6. 충전부는 충분한 절연효과가 있는 방호망이나 절연덮개를 설치하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des6 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">7. 분전반 등 전기 기계·기구의 금속제 외함, 금속제 외피 및 철대는 접지를 실시하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des7 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">8. 배선 또는 이동전선의 절연피복이 손상되거나 노화됨으로 인한 감전의 위험을 방지하기 위한 조치를 하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des8 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">9. 습윤한 장소의 이동전선 및 부속 접속기구는 충분한 절연효과가 있는 것을 사용하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des9 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">10. 통로바닥에 전선 또는 이동전선 등을 설치하여 사용하지 않도록 관리하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des10 ? \"YES\" : \"NO\"}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].registrant}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].responsible}\r\n                        \r\n                      \r\n                  </Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            </Card>\r\n            </Col>\r\n          </Row>\r\n        )\r\n      }\r\n\r\n\r\n      else if(block_list[detailcnt].checktype == \"Welding\"){\r\n\r\n        return (\r\n          \r\n          <Row>\r\n            <Col lg=\"7\" md=\"12\">\r\n            <Card small>\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\">Form Example</h6>\r\n            </CardHeader>\r\n              <ListGroup flush>\r\n              <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                  <Col>\r\n                        <label htmlFor=\"feInputState\">카테고리</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].category}\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress\">체크리스트 타입</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].checktype}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">1. 화재위험작업에 대한 작업계획을 수립하였다.</label>\r\n                        <br></br>\r\n                      {block_list[detailcnt].des1 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">2. 작업장 내 위험물, 가연물의 사용·보관 현황을 파악하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des2 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">3. 위험물질로 인한 응급상황이 발생했을 때 필요한 행동에 대한 정보를 미리 준비하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des3 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">4. 작업현장에 허가받은 위험물의 종류별 기준량 이상이 되면 지역 소방기관과 관계기관에 신고하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des4 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">5. 소방서로부터 허가받은 위험물 제조소 또는 저장소 자료를 토대로 현장에 위험물의 종류별로 기준 이상의 위험물이 존재하거나 앞으로 존재하게 될 것인지의 여부를 판단하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des5 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">6. 작업자에 대해 화재예방 및 피난 교육 등을 실시하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des6 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">7. 화재위험작업 대상 작업자에게 특별안전보건교육을 실시하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des7 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">8. 산소, LPG 등 가스 용기는 전도 위험이 없는 곳에 보관하며, 사용 전 또는 사용 중인 용기와 그 밖의 용기를 명확히 구별하여 보관하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des8 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">9. 작업을 중단하거나 마치고 작업장소를 떠날 경우에는 가스 등의 공급구의 밸브나 콕을 잠구었다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des9 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">10. 인화성 가스 및 산소를 사용하여 금속을 용접·용단하는 경우, 지정된 자격증*의 보유 여부를 확인하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des10 ? \"YES\" : \"NO\"}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].registrant}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].responsible}\r\n                        \r\n                      \r\n                  </Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            </Card>\r\n            </Col>\r\n          </Row>\r\n        )\r\n      }\r\n\r\n      \r\n      else if(block_list[detailcnt].checktype == \"Construction\"){\r\n\r\n        return (\r\n          \r\n          <Row>\r\n            <Col lg=\"7\" md=\"12\">\r\n            <Card small>\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\">Form Example</h6>\r\n            </CardHeader>\r\n              <ListGroup flush>\r\n              <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                  <Col>\r\n                        <label htmlFor=\"feInputState\">카테고리</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].category}\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress\">체크리스트 타입</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].checktype}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">1. 자격을 갖춘 자에게 운전을 하도록 하였다.</label>\r\n                        <br></br>\r\n                      {block_list[detailcnt].des1 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">2. 형식신고 및 안전인증·검사 등 기계별 필요한 검사를 받았는지 확인했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des2 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">3. 건설기계의 운행경로 및 작업방법을 고려해 기계별 작업계획을 수립·이행하고, 작업지휘자를 지정하여 지휘·감독했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des3 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">4. 작업 전 운전자 및 작업자 안전교육을 실시했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des4 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">5. 작업장소의 지형 및 지반상태를 확인하고, 기계가 넘어질 우려가 없도록 조치했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des5 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">6. 작업구간에 작업자의 출입을 금지하거나 유도자를 배치하여 차량을 유도하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des6 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">7. 유도자는 정해진 신호방법에 따라 차량을 유도했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des7 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">8. 건설기계는 주된 용도로만 사용하여야 했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des8 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">9. 승차석이 아닌 곳에 작업자를 탑승시키지 않았다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des9 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">10. 지정된 제한속도를 준수하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des10 ? \"YES\" : \"NO\"}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].registrant}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].responsible}\r\n                        \r\n                      \r\n                  </Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            </Card>\r\n            </Col>\r\n          </Row>\r\n        )\r\n      }\r\n\r\n      else{\r\n      \r\n        return (\r\n          \r\n          <Row>\r\n            <Col lg=\"7\" md=\"12\">\r\n            <Card small>\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\">Form Example</h6>\r\n            </CardHeader>\r\n              <ListGroup flush>\r\n              <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                  <Col>\r\n                        <label htmlFor=\"feInputState\">카테고리</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].category}\r\n  \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress\">파일명</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].name}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].filedes}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].registrant}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].responsible}\r\n                        \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">파일 URL</label>\r\n                        <br></br>\r\n                        FileUrl :{\" \"}\r\n                        <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        {block_list[detailcnt].ipfsHash}\r\n                        </a>\r\n                      \r\n                  </Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            </Card>\r\n            </Col>\r\n          </Row>\r\n        )\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const nextId = useRef(1);\r\n\r\n  \r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n\r\n    async function updateAllTransactions(e){\r\n      if(transactionInstance && !first){\r\n\r\n\r\n        console.log(transactionInstance)\r\n        let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\r\n        \r\n  \r\n  \r\n        for(let i = events.length - 1; i >= 0; i--){\r\n          \r\n          var time_ = moment.unix(events[i].returnValues.time);\r\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\r\n          fileurl += events[i].returnValues.ipfs_hash.toString();\r\n          \r\n          console.log(fileurl)\r\n          \r\n          block_list.push({\r\n            id: nextId.current,\r\n            category : events[i].returnValues.category.toString(),\r\n            name : events[i].returnValues.name.toString(),\r\n            // time : time_,\r\n            // time : time_.toString(), \r\n            time : parseInt(events[i].returnValues.time), \r\n            real_time : time_.toString(),\r\n            ipfsHash : fileurl,\r\n            registrant : events[i].returnValues.registrant.toString(),\r\n            responsible : events[i].returnValues.responsible_manager.toString(),\r\n            filetype : events[i].returnValues.file_type.toString(),\r\n            filedes : events[i].returnValues.file_description.toString()\r\n          }\r\n          )\r\n          \r\n          nextId.current += 1;\r\n  \r\n          console.log(events[i].returnValues);\r\n        }\r\n        // setLoading(true);\r\n        // setFirst(true);\r\n        console.log('events.length = ', events.length);\r\n        console.log(events);\r\n        console.log('block_list = ', block_list);\r\n\r\n\r\n        let events_ = await transactionInstance.getPastEvents('checkTransaction', {fromBlock:0, toBlock:'latest'});\r\n        \r\n        for(let i = events_.length - 1; i >= 0; i--){\r\n            \r\n          var time_ = moment.unix(events_[i].returnValues.time);\r\n          let temp_des = [];\r\n          for(let j = 0; j < 10; j++){\r\n            let temp = 0;\r\n            if(events_[i].returnValues.des[j].toString() == \"true\"){\r\n              temp = 1;\r\n            }\r\n            temp_des.push(temp)\r\n          }\r\n          \r\n          block_list.push({\r\n            id: nextId.current,\r\n            category : events_[i].returnValues.category.toString(),\r\n            checktype : events_[i].returnValues.checktype.toString(),\r\n            // time : time_,\r\n            // time : time_.toString(), \r\n            time : parseInt(events[i].returnValues.time), \r\n            real_time : time_.toString(),\r\n            des1 : temp_des[0],\r\n            des2 : temp_des[1],\r\n            des3 : temp_des[2],\r\n  \r\n            des4 : temp_des[3],\r\n            des5 : temp_des[4],\r\n            des6 : temp_des[5],\r\n            des7 : temp_des[6],\r\n            des8 : temp_des[7],\r\n            des9 : temp_des[8],\r\n            des10 :temp_des[9],\r\n            registrant : events_[i].returnValues.registrant.toString(),\r\n            responsible : events_[i].returnValues.responsible_manager.toString(),\r\n          }\r\n          )\r\n          \r\n          nextId.current += 1;\r\n  \r\n          console.log(events_[i].returnValues);\r\n        }\r\n\r\n        \r\n        let i, j;\r\n\r\n        for(i = 0; i < block_list.length; i++){\r\n          \r\n          let temp_list;\r\n          let temp_list_cnt = -1;\r\n\r\n          for(j = i+1; j < block_list.length; j++){\r\n            if(block_list[i].time < block_list[j].time){\r\n              temp_list = block_list[j];\r\n              temp_list_cnt = j;\r\n            }\r\n          }\r\n\r\n          if(temp_list_cnt != -1){\r\n            block_list[temp_list_cnt] = block_list[i];\r\n            block_list[i] = temp_list;\r\n          }\r\n\r\n        }\r\n        \r\n\r\n        setLoading(true);\r\n        setFirst(true);\r\n        console.log('events.length = ', events.length);\r\n        console.log(events);\r\n        console.log('block_list = ', block_list);\r\n\r\n      }\r\n\r\n  \r\n    }\r\n\r\n    updateAllTransactions();\r\n    sessionStorage.removeItem('search')\r\n\r\n}, );\r\n\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"All\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {Showboard()}\r\n        {/* Default Light Table */}\r\n        {/* <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            /> */}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default All;\r\n","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\Temp.js",["245","246","247","248","249","250","251","252","253"],"\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Pagination from \"../pagination.js\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nfunction TempList({transactionInstance}){\r\n  \r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [block_list, setblock_list] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [first, setFirst] = useState(false);\r\n\r\n  const [detail, setDetail] = useState(false);\r\n  const [detailcnt, setDetailcnt] = useState(-1);\r\n\r\n  const detail_click = (cnt) => {\r\n    setDetail(true);\r\n    setDetailcnt(cnt);\r\n  }\r\n\r\n  function repeatboardchild(child, start){\r\n    if(loading){\r\n\r\n      let arr = [];\r\n\r\n      if(start == 1) start = 0;\r\n      else{\r\n        start--;\r\n        start *= 10;\r\n      }\r\n  \r\n      let end = start + 10;\r\n  \r\n      if (end > child.length){\r\n        end = child.length;\r\n      }\r\n  \r\n      console.log('child = ', child);\r\n      \r\n      console.log('child.length = %d', child.length);\r\n      for(let i = start; i < end; i++){\r\n        console.log('i = %d, start = %d, end = %d', i, start, end);\r\n        // if(sessionStorage.getItem('search') === null){\r\n          arr.push(\r\n          <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n            <th scope=\"row\" >{i+1}</th>\r\n            <td >{child[i].name}</td>\r\n            <td>{child[i].responsible}</td>\r\n            <td>{child[i].filetype}</td>\r\n            <td>{child[i].filedes}</td>\r\n            <td>{child[i].time}</td>\r\n          </tr>\r\n          )\r\n        // }\r\n        // else if(sessionStorage.getItem('search') === child[i].name || sessionStorage.getItem('search') === child[i].responsible || sessionStorage.getItem('search') === child[i].filetype || sessionStorage.getItem('search') === child[i].filedes){\r\n        //   arr.push(\r\n        //     <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n        //       <th scope=\"row\" >{i+1}</th>\r\n        //       <td >{child[i].name}</td>\r\n        //       <td>{child[i].responsible}</td>\r\n        //       <td>{child[i].filetype}</td>\r\n        //       <td>{child[i].filedes}</td>\r\n        //       <td>{child[i].time}</td>\r\n        //     </tr>\r\n        //     )\r\n        // }\r\n      }\r\n  \r\n      return arr;\r\n    }\r\n\r\n  }\r\n\r\n  \r\n  function Showboard(){\r\n\r\n    console.log(first);\r\n    console.log(detail);\r\n\r\n    if(!detail && first){\r\n      return (\r\n        <div>\r\n        <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            />\r\n            </div>\r\n      )\r\n    }\r\n    else if (detail && first){\r\n      \r\n      return (\r\n        \r\n        <Row>\r\n          <Col lg=\"7\" md=\"12\">\r\n          <Card small>\r\n          <CardHeader className=\"border-bottom\">\r\n            <h6 className=\"m-0\">Form Example</h6>\r\n          </CardHeader>\r\n            <ListGroup flush>\r\n            <ListGroupItem className=\"p-3\">\r\n              <Row>\r\n                <Col>\r\n                      <label htmlFor=\"feInputState\">카테고리</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].category}\r\n\r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress\">파일명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].name}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].filedes}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].registrant}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].responsible}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\r\n                      <br></br>\r\n                      FileUrl :{\" \"}\r\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      {block_list[detailcnt].ipfsHash}\r\n                      </a>\r\n                    \r\n                </Col>\r\n              </Row>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n          </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  const nextId = useRef(1);\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n    async function updateAllTransactions(e){\r\n      if(transactionInstance && !first){\r\n\r\n        console.log(transactionInstance)\r\n        let events = await transactionInstance.getPastEvents('tempTransaction', {fromBlock:0, toBlock:'latest'});\r\n        \r\n  \r\n  \r\n        for(let i = events.length - 1; i >= 0; i--){\r\n          \r\n          var time_ = moment.unix(events[i].returnValues.time);\r\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\r\n          fileurl += events[i].returnValues.ipfs_hash.toString();\r\n          \r\n          block_list.push({\r\n            id: nextId.current,\r\n            category : events[i].returnValues.category.toString(),\r\n            name : events[i].returnValues.name.toString(),\r\n            time : time_.toString(), \r\n            ipfsHash : fileurl,\r\n            registrant : events[i].returnValues.registrant.toString(),\r\n            responsible : events[i].returnValues.responsible_manager.toString(),\r\n            filetype : events[i].returnValues.file_type.toString(),\r\n            filedes : events[i].returnValues.file_description.toString()\r\n          }\r\n          )\r\n          \r\n          nextId.current += 1;\r\n  \r\n          console.log(events[i].returnValues);\r\n        }\r\n        setLoading(true);\r\n        setFirst(true);\r\n        console.log('events.length = ', events.length);\r\n        console.log(events);\r\n        console.log('block_list = ', block_list);\r\n      }\r\n  \r\n    }\r\n\r\n    updateAllTransactions();\r\n    sessionStorage.removeItem('search')\r\n\r\n}, );\r\n\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"Temp List\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {Showboard()}\r\n        {/* Default Light Table */}\r\n        {/* <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            /> */}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default TempList;\r\n\r\n","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\Ray.js",["254","255","256","257","258","259","260","261","262"],"\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Pagination from \"../pagination.js\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nfunction RayList({transactionInstance}){\r\n  \r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [block_list, setblock_list] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [first, setFirst] = useState(false);\r\n\r\n  const [detail, setDetail] = useState(false);\r\n  const [detailcnt, setDetailcnt] = useState(-1);\r\n\r\n  const detail_click = (cnt) => {\r\n    setDetail(true);\r\n    setDetailcnt(cnt);\r\n  }\r\n\r\n  function repeatboardchild(child, start){\r\n    if(loading){\r\n\r\n      let arr = [];\r\n\r\n      if(start == 1) start = 0;\r\n      else{\r\n        start--;\r\n        start *= 10;\r\n      }\r\n  \r\n      let end = start + 10;\r\n  \r\n      if (end > child.length){\r\n        end = child.length;\r\n      }\r\n  \r\n      console.log('child = ', child);\r\n      \r\n      console.log('child.length = %d', child.length);\r\n      for(let i = start; i < end; i++){\r\n        console.log('i = %d, start = %d, end = %d', i, start, end);\r\n        // if(sessionStorage.getItem('search') === null){\r\n          arr.push(\r\n          <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n            <th scope=\"row\" >{i+1}</th>\r\n            <td >{child[i].name}</td>\r\n            <td>{child[i].responsible}</td>\r\n            <td>{child[i].filetype}</td>\r\n            <td>{child[i].filedes}</td>\r\n            <td>{child[i].time}</td>\r\n          </tr>\r\n          )\r\n        // }\r\n        // else if(sessionStorage.getItem('search') === child[i].name || sessionStorage.getItem('search') === child[i].responsible || sessionStorage.getItem('search') === child[i].filetype || sessionStorage.getItem('search') === child[i].filedes){\r\n        //   arr.push(\r\n        //     <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n        //       <th scope=\"row\" >{i+1}</th>\r\n        //       <td >{child[i].name}</td>\r\n        //       <td>{child[i].responsible}</td>\r\n        //       <td>{child[i].filetype}</td>\r\n        //       <td>{child[i].filedes}</td>\r\n        //       <td>{child[i].time}</td>\r\n        //     </tr>\r\n        //     )\r\n        // }\r\n      }\r\n  \r\n      return arr;\r\n    }\r\n\r\n  }\r\n\r\n  \r\n  function Showboard(){\r\n\r\n    console.log(first);\r\n    console.log(detail);\r\n\r\n    if(!detail && first){\r\n      return (\r\n        <div>\r\n        <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            />\r\n            </div>\r\n      )\r\n    }\r\n    else if (detail && first){\r\n      \r\n      return (\r\n        \r\n        <Row>\r\n          <Col lg=\"7\" md=\"12\">\r\n          <Card small>\r\n          <CardHeader className=\"border-bottom\">\r\n            <h6 className=\"m-0\">Form Example</h6>\r\n          </CardHeader>\r\n            <ListGroup flush>\r\n            <ListGroupItem className=\"p-3\">\r\n              <Row>\r\n                <Col>\r\n                      <label htmlFor=\"feInputState\">카테고리</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].category}\r\n\r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress\">파일명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].name}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].filedes}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].registrant}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].responsible}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\r\n                      <br></br>\r\n                      FileUrl :{\" \"}\r\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      {block_list[detailcnt].ipfsHash}\r\n                      </a>\r\n                    \r\n                </Col>\r\n              </Row>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n          </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  const nextId = useRef(1);\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n    async function updateAllTransactions(e){\r\n      if(transactionInstance && !first){\r\n\r\n        console.log(transactionInstance)\r\n        let events = await transactionInstance.getPastEvents('rayTransaction', {fromBlock:0, toBlock:'latest'});\r\n        \r\n  \r\n  \r\n        for(let i = events.length - 1; i >= 0; i--){\r\n          \r\n          var time_ = moment.unix(events[i].returnValues.time);\r\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\r\n          fileurl += events[i].returnValues.ipfs_hash.toString();\r\n          \r\n          block_list.push({\r\n            id: nextId.current,\r\n            category : events[i].returnValues.category.toString(),\r\n            name : events[i].returnValues.name.toString(),\r\n            time : time_.toString(), \r\n            ipfsHash : fileurl,\r\n            registrant : events[i].returnValues.registrant.toString(),\r\n            responsible : events[i].returnValues.responsible_manager.toString(),\r\n            filetype : events[i].returnValues.file_type.toString(),\r\n            filedes : events[i].returnValues.file_description.toString()\r\n          }\r\n          )\r\n          \r\n          nextId.current += 1;\r\n  \r\n          console.log(events[i].returnValues);\r\n        }\r\n        setLoading(true);\r\n        setFirst(true);\r\n        console.log('events.length = ', events.length);\r\n        console.log(events);\r\n        console.log('block_list = ', block_list);\r\n      }\r\n  \r\n    }\r\n\r\n    updateAllTransactions();\r\n    sessionStorage.removeItem('search')\r\n\r\n}, );\r\n\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"Ray List\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {Showboard()}\r\n        {/* Default Light Table */}\r\n        {/* <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            /> */}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default RayList;\r\n\r\n","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\Pressure.js",["263","264","265","266","267","268","269","270","271"],"\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Pagination from \"../pagination.js\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nfunction PressureList({transactionInstance}){\r\n  \r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [block_list, setblock_list] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [first, setFirst] = useState(false);\r\n\r\n  const [detail, setDetail] = useState(false);\r\n  const [detailcnt, setDetailcnt] = useState(-1);\r\n\r\n  const detail_click = (cnt) => {\r\n    setDetail(true);\r\n    setDetailcnt(cnt);\r\n  }\r\n\r\n  function repeatboardchild(child, start){\r\n    if(loading){\r\n\r\n      let arr = [];\r\n\r\n      if(start == 1) start = 0;\r\n      else{\r\n        start--;\r\n        start *= 10;\r\n      }\r\n  \r\n      let end = start + 10;\r\n  \r\n      if (end > child.length){\r\n        end = child.length;\r\n      }\r\n  \r\n      console.log('child = ', child);\r\n      \r\n      console.log('child.length = %d', child.length);\r\n      for(let i = start; i < end; i++){\r\n        console.log('i = %d, start = %d, end = %d', i, start, end);\r\n        // if(sessionStorage.getItem('search') === null){\r\n          arr.push(\r\n          <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n            <th scope=\"row\" >{i+1}</th>\r\n            <td >{child[i].name}</td>\r\n            <td>{child[i].responsible}</td>\r\n            <td>{child[i].filetype}</td>\r\n            <td>{child[i].filedes}</td>\r\n            <td>{child[i].time}</td>\r\n          </tr>\r\n          )\r\n        // }\r\n        // else if(sessionStorage.getItem('search') === child[i].name || sessionStorage.getItem('search') === child[i].responsible || sessionStorage.getItem('search') === child[i].filetype || sessionStorage.getItem('search') === child[i].filedes){\r\n        //   arr.push(\r\n        //     <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n        //       <th scope=\"row\" >{i+1}</th>\r\n        //       <td >{child[i].name}</td>\r\n        //       <td>{child[i].responsible}</td>\r\n        //       <td>{child[i].filetype}</td>\r\n        //       <td>{child[i].filedes}</td>\r\n        //       <td>{child[i].time}</td>\r\n        //     </tr>\r\n        //     )\r\n        // }\r\n      }\r\n  \r\n      return arr;\r\n    }\r\n\r\n  }\r\n\r\n  \r\n  function Showboard(){\r\n\r\n    console.log(first);\r\n    console.log(detail);\r\n\r\n    if(!detail && first){\r\n      return (\r\n        <div>\r\n        <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            />\r\n            </div>\r\n      )\r\n    }\r\n    else if (detail && first){\r\n      \r\n      return (\r\n        \r\n        <Row>\r\n          <Col lg=\"7\" md=\"12\">\r\n          <Card small>\r\n          <CardHeader className=\"border-bottom\">\r\n            <h6 className=\"m-0\">Form Example</h6>\r\n          </CardHeader>\r\n            <ListGroup flush>\r\n            <ListGroupItem className=\"p-3\">\r\n              <Row>\r\n                <Col>\r\n                      <label htmlFor=\"feInputState\">카테고리</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].category}\r\n\r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress\">파일명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].name}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].filedes}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].registrant}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].responsible}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\r\n                      <br></br>\r\n                      FileUrl :{\" \"}\r\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      {block_list[detailcnt].ipfsHash}\r\n                      </a>\r\n                    \r\n                </Col>\r\n              </Row>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n          </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  const nextId = useRef(1);\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n    async function updateAllTransactions(e){\r\n      if(transactionInstance && !first){\r\n\r\n        console.log(transactionInstance)\r\n        let events = await transactionInstance.getPastEvents('pressureTransaction', {fromBlock:0, toBlock:'latest'});\r\n        \r\n  \r\n  \r\n        for(let i = events.length - 1; i >= 0; i--){\r\n          \r\n          var time_ = moment.unix(events[i].returnValues.time);\r\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\r\n          fileurl += events[i].returnValues.ipfs_hash.toString();\r\n          \r\n          block_list.push({\r\n            id: nextId.current,\r\n            category : events[i].returnValues.category.toString(),\r\n            name : events[i].returnValues.name.toString(),\r\n            time : time_.toString(), \r\n            ipfsHash : fileurl,\r\n            registrant : events[i].returnValues.registrant.toString(),\r\n            responsible : events[i].returnValues.responsible_manager.toString(),\r\n            filetype : events[i].returnValues.file_type.toString(),\r\n            filedes : events[i].returnValues.file_description.toString()\r\n          }\r\n          )\r\n          \r\n          nextId.current += 1;\r\n  \r\n          console.log(events[i].returnValues);\r\n        }\r\n        setLoading(true);\r\n        setFirst(true);\r\n        console.log('events.length = ', events.length);\r\n        console.log(events);\r\n        console.log('block_list = ', block_list);\r\n      }\r\n  \r\n    }\r\n\r\n    updateAllTransactions();\r\n    sessionStorage.removeItem('search')\r\n\r\n}, );\r\n\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"Pressure List\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {Showboard()}\r\n        {/* Default Light Table */}\r\n        {/* <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            /> */}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default PressureList;\r\n\r\n","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\CCTV.js",["272","273","274","275","276","277","278","279","280"],"\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Pagination from \"../pagination.js\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nfunction CCTVList({transactionInstance}){\r\n  \r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [block_list, setblock_list] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [first, setFirst] = useState(false);\r\n\r\n  const [detail, setDetail] = useState(false);\r\n  const [detailcnt, setDetailcnt] = useState(-1);\r\n\r\n  const detail_click = (cnt) => {\r\n    setDetail(true);\r\n    setDetailcnt(cnt);\r\n  }\r\n\r\n  function repeatboardchild(child, start){\r\n    if(loading){\r\n\r\n      let arr = [];\r\n\r\n      if(start == 1) start = 0;\r\n      else{\r\n        start--;\r\n        start *= 10;\r\n      }\r\n  \r\n      let end = start + 10;\r\n  \r\n      if (end > child.length){\r\n        end = child.length;\r\n      }\r\n  \r\n      console.log('child = ', child);\r\n      \r\n      console.log('child.length = %d', child.length);\r\n      for(let i = start; i < end; i++){\r\n        console.log('i = %d, start = %d, end = %d', i, start, end);\r\n        // if(sessionStorage.getItem('search') === null){\r\n          arr.push(\r\n          <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n            <th scope=\"row\" >{i+1}</th>\r\n            <td >{child[i].name}</td>\r\n            <td>{child[i].responsible}</td>\r\n            <td>{child[i].filetype}</td>\r\n            <td>{child[i].filedes}</td>\r\n            <td>{child[i].time}</td>\r\n          </tr>\r\n          )\r\n        // }\r\n        // else if(sessionStorage.getItem('search') === child[i].name || sessionStorage.getItem('search') === child[i].responsible || sessionStorage.getItem('search') === child[i].filetype || sessionStorage.getItem('search') === child[i].filedes){\r\n        //   arr.push(\r\n        //     <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n        //       <th scope=\"row\" >{i+1}</th>\r\n        //       <td >{child[i].name}</td>\r\n        //       <td>{child[i].responsible}</td>\r\n        //       <td>{child[i].filetype}</td>\r\n        //       <td>{child[i].filedes}</td>\r\n        //       <td>{child[i].time}</td>\r\n        //     </tr>\r\n        //     )\r\n        // }\r\n      }\r\n  \r\n      return arr;\r\n    }\r\n\r\n  }\r\n\r\n  \r\n  function Showboard(){\r\n\r\n    console.log(first);\r\n    console.log(detail);\r\n\r\n    if(!detail && first){\r\n      return (\r\n        <div>\r\n        <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            />\r\n            </div>\r\n      )\r\n    }\r\n    else if (detail && first){\r\n      \r\n      return (\r\n        \r\n        <Row>\r\n          <Col lg=\"7\" md=\"12\">\r\n          <Card small>\r\n          <CardHeader className=\"border-bottom\">\r\n            <h6 className=\"m-0\">Form Example</h6>\r\n          </CardHeader>\r\n            <ListGroup flush>\r\n            <ListGroupItem className=\"p-3\">\r\n              <Row>\r\n                <Col>\r\n                      <label htmlFor=\"feInputState\">카테고리</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].category}\r\n\r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress\">파일명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].name}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].filedes}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].registrant}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].responsible}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\r\n                      <br></br>\r\n                      FileUrl :{\" \"}\r\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      {block_list[detailcnt].ipfsHash}\r\n                      </a>\r\n                    \r\n                </Col>\r\n              </Row>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n          </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  const nextId = useRef(1);\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n    async function updateAllTransactions(e){\r\n      if(transactionInstance && !first){\r\n\r\n        console.log(transactionInstance)\r\n        let events = await transactionInstance.getPastEvents('cctvTransaction', {fromBlock:0, toBlock:'latest'});\r\n        \r\n  \r\n  \r\n        for(let i = events.length - 1; i >= 0; i--){\r\n          \r\n          var time_ = moment.unix(events[i].returnValues.time);\r\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\r\n          fileurl += events[i].returnValues.ipfs_hash.toString();\r\n          \r\n          block_list.push({\r\n            id: nextId.current,\r\n            category : events[i].returnValues.category.toString(),\r\n            name : events[i].returnValues.name.toString(),\r\n            time : time_.toString(), \r\n            ipfsHash : fileurl,\r\n            registrant : events[i].returnValues.registrant.toString(),\r\n            responsible : events[i].returnValues.responsible_manager.toString(),\r\n            filetype : events[i].returnValues.file_type.toString(),\r\n            filedes : events[i].returnValues.file_description.toString()\r\n          }\r\n          )\r\n          \r\n          nextId.current += 1;\r\n  \r\n          console.log(events[i].returnValues);\r\n        }\r\n        setLoading(true);\r\n        setFirst(true);\r\n        console.log('events.length = ', events.length);\r\n        console.log(events);\r\n        console.log('block_list = ', block_list);\r\n      }\r\n  \r\n    }\r\n\r\n    updateAllTransactions();\r\n    sessionStorage.removeItem('search')\r\n\r\n}, );\r\n\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"CCTV List\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {Showboard()}\r\n        {/* Default Light Table */}\r\n        {/* <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            /> */}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default CCTVList;\r\n\r\n","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\Admin.js",["281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Pagination from \"../pagination.js\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\n\r\nfunction Admin({transactionInstance}){\r\n  \r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [block_list, setblock_list] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [first, setFirst] = useState(false);\r\n\r\n  const [detail, setDetail] = useState(false);\r\n  const [detailcnt, setDetailcnt] = useState(-1);\r\n\r\n  const [trans, setTrans] = useState([]);\r\n\r\n  const detail_click = (cnt) => {\r\n    setDetail(true);\r\n    setDetailcnt(cnt);\r\n  }\r\n\r\n  ////////////////////////////test////////////////////////////////\r\n  function test(child, start){\r\n    if(loading){\r\n\r\n      let arr = [];\r\n\r\n      if(start == 1) start = 0;\r\n      else{\r\n        start--;\r\n        start *= 10;\r\n      }\r\n  \r\n      let end = start + 10;\r\n  \r\n      if (end > child.length){\r\n        end = child.length;\r\n      }\r\n  \r\n      console.log('child = ', child);\r\n      \r\n      console.log('child.length = %d', child.length);\r\n      for(let i = start; i < end; i++){\r\n        console.log('i = %d, start = %d, end = %d', i, start, end);\r\n        console.log(sessionStorage.getItem('search'));\r\n        // if(sessionStorage.getItem('search') === null){\r\n          arr.push(\r\n            <div>\r\n                <a><b>Time:</b> {child[i].time}</a> <br/>\r\n                <a><b>Address:</b> {child[i].address}</a><br/>\r\n                <a><b>BlockHash:</b> {child[i].blockHash}</a><br/>\r\n                <a><b>BlockNumber:</b> {child[i].blockNumber}</a><br/>\r\n                <a><b>Id:</b> {child[i].id}</a><br/>\r\n                <a><b>LogIndex:</b> {child[i].logIndex}</a><br/>\r\n                <a><b>Signature:</b> {child[i].signature}</a><br/>\r\n                <a><b>TransactionHash:</b> {child[i].transactionHash}</a><br/>\r\n                <a><b>TransactionIndex:</b> {child[i].transactionIndex}</a><br/>\r\n                <a><b>Type:</b> {child[i].type}</a><br/>\r\n                <a><b>Category:</b> {child[i].category}</a><br/>\r\n                <a><b>Name:</b> {child[i].name}</a><br/>\r\n                <a><b>IpfsHash:</b> {child[i].ipfsHash}</a><br/>\r\n                <a><b>Registrant:</b> {child[i].registrant}</a><br/>\r\n                <a><b>Responsible:</b> {child[i].responsible}</a><br/>\r\n                <a><b>Filetype:</b> {child[i].filetype}</a><br/>\r\n                <a><b>Filedes:</b> {child[i].filedes}</a><br/><br/>\r\n            </div>\r\n            )\r\n      }\r\n  \r\n      return arr;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  function ShowTransactions(){\r\n\r\n    console.log(first);\r\n    console.log(detail);\r\n\r\n      return (\r\n        <div>\r\n        \r\n        <Card small>\r\n            <ListGroup flush>\r\n                <ListGroupItem className=\"p-3\">\r\n                    <Row>\r\n                    <Col>\r\n                        {test(block_list, page)}\r\n                    </Col>\r\n                    </Row>\r\n                </ListGroupItem>\r\n            </ListGroup>\r\n        </Card>\r\n        </div>\r\n      )\r\n\r\n  }\r\n\r\n\r\n  const nextId = useRef(1);\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n\r\n    async function updateAllTransactions(e){\r\n      if(transactionInstance && !first){\r\n\r\n        console.log(transactionInstance)\r\n        let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\r\n        \r\n        for(let i = events.length - 1; i >= 0; i--){\r\n          \r\n          var time_ = moment.unix(events[i].returnValues.time);\r\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\r\n          fileurl += events[i].returnValues.ipfs_hash.toString();\r\n          \r\n          console.log(fileurl)\r\n          \r\n          trans.push(events)\r\n\r\n          block_list.push({\r\n            id: nextId.current,\r\n            category : events[i].returnValues.category.toString(),\r\n            name : events[i].returnValues.name.toString(),\r\n            time : time_.toString(), \r\n            ipfsHash : fileurl,\r\n            registrant : events[i].returnValues.registrant.toString(),\r\n            responsible : events[i].returnValues.responsible_manager.toString(),\r\n            filetype : events[i].returnValues.file_type.toString(),\r\n            filedes : events[i].returnValues.file_description.toString(),\r\n\r\n            address: events[i].address.toString(),\r\n            blockHash: events[i].blockHash.toString(),\r\n            blockNumber: events[i].blockNumber.toString(),\r\n            id: events[i].id.toString(),\r\n            logIndex: events[i].logIndex.toString(),\r\n            signature: events[i].signature.toString(),\r\n            transactionHash: events[i].transactionHash.toString(),\r\n            transactionIndex: events[i].transactionIndex.toString(),\r\n            type: events[i].type.toString(),\r\n\r\n          }\r\n          )\r\n          \r\n          nextId.current += 1;\r\n  \r\n          console.log(events[i].returnValues);\r\n        }\r\n        setLoading(true);\r\n        setFirst(true);\r\n        setTrans(events)\r\n        console.log('events.length = ', events.length);\r\n        console.log(events);\r\n        console.log(trans[0][0]);\r\n        console.log('block_list = ', block_list);\r\n      }\r\n  \r\n    }\r\n    updateAllTransactions();\r\n    sessionStorage.removeItem('search')\r\n\r\n}, );\r\n\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"Transaction Logs\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {ShowTransactions()}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default Admin;\r\n\r\n","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\CheckList.js",["315","316","317","318","319","320","321","322","323","324","325","326","327"],"\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Pagination from \"../pagination.js\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nfunction CheckList({transactionInstance}){\r\n  \r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [block_list, setblock_list] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [first, setFirst] = useState(false);\r\n\r\n  const [detail, setDetail] = useState(false);\r\n  const [detailcnt, setDetailcnt] = useState(-1);\r\n\r\n  const detail_click = (cnt) => {\r\n    setDetail(true);\r\n    setDetailcnt(cnt);\r\n  }\r\n\r\n  function repeatboardchild(child, start){\r\n    if(loading){\r\n\r\n      let arr = [];\r\n\r\n      if(start == 1) start = 0;\r\n      else{\r\n        start--;\r\n        start *= 10;\r\n      }\r\n  \r\n      let end = start + 10;\r\n  \r\n      if (end > child.length){\r\n        end = child.length;\r\n      }\r\n  \r\n      console.log('child = ', child);\r\n      \r\n      console.log('child.length = %d', child.length);\r\n      for(let i = start; i < end; i++){\r\n        console.log('i = %d, start = %d, end = %d', i, start, end);\r\n        // if(sessionStorage.getItem('search') === null){\r\n          arr.push(\r\n          <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n            <th scope=\"row\" >{i+1}</th>\r\n            <td >{child[i].checktype}</td>\r\n            <td>{child[i].responsible}</td>\r\n            {/* <td>{child[i].filetype}</td>\r\n            <td>{child[i].filedes}</td> */}\r\n            <td>{child[i].time}</td>\r\n          </tr>\r\n          )\r\n        // }\r\n        // else if(sessionStorage.getItem('search') === child[i].name || sessionStorage.getItem('search') === child[i].responsible || sessionStorage.getItem('search') === child[i].filetype || sessionStorage.getItem('search') === child[i].filedes){\r\n        //   arr.push(\r\n        //     <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n        //       <th scope=\"row\" >{i+1}</th>\r\n        //       <td >{child[i].name}</td>\r\n        //       <td>{child[i].responsible}</td>\r\n        //       <td>{child[i].filetype}</td>\r\n        //       <td>{child[i].filedes}</td>\r\n        //       <td>{child[i].time}</td>\r\n        //     </tr>\r\n        //     )\r\n        // }\r\n      }\r\n  \r\n      return arr;\r\n    }\r\n\r\n  }\r\n\r\n  \r\n  function Showboard(){\r\n\r\n    console.log(first);\r\n    console.log(detail);\r\n\r\n    if(!detail && first){\r\n      return (\r\n        <div>\r\n        <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      {/* <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th> */}\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            />\r\n            </div>\r\n      )\r\n    }\r\n    else if (detail && first){\r\n      \r\n\r\n      if(block_list[detailcnt].checktype == \"Electricity\"){\r\n\r\n        return (\r\n          \r\n          <Row>\r\n            <Col lg=\"7\" md=\"12\">\r\n            <Card small>\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\">Form Example</h6>\r\n            </CardHeader>\r\n              <ListGroup flush>\r\n              <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                  <Col>\r\n                        <label htmlFor=\"feInputState\">카테고리</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].category}\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress\">체크리스트 타입</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].checktype}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">1. 감전위험이 있는 전기 기계·기구 또는 전로의 설치·해체·정비·점검 등의 작업을 하는 하는 경우 작업자의 자격을 확인하였다.</label>\r\n                        <br></br>\r\n                      {block_list[detailcnt].des1 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">2. 감전의 위험이 있는 작업에 종사하는 경우 절연용 보호구를 지급하고 작업자에게 착용하도록 하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des2 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">3. 가공전로에 근접하여 비계를 설치하는 경우에는 가공전로를 이설하거나 가공전로에 절연용 방호구를 장착하는 등 가공전로와의 접촉을 방지하기 위해 조치 하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des3 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">4. 임시 수전설비의 주변은 관계 작업자가 아닌 사람의 출입을 금지하고, 위험표시 등의 방법으로 방호를 강화하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des4 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">5. 가설 배전반·분전반은 충전부가 노출되지 않도록 폐쇄형 외함이 있는 구조로 설치하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des5 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">6. 충전부는 충분한 절연효과가 있는 방호망이나 절연덮개를 설치하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des6 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">7. 분전반 등 전기 기계·기구의 금속제 외함, 금속제 외피 및 철대는 접지를 실시하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des7 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">8. 배선 또는 이동전선의 절연피복이 손상되거나 노화됨으로 인한 감전의 위험을 방지하기 위한 조치를 하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des8 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">9. 습윤한 장소의 이동전선 및 부속 접속기구는 충분한 절연효과가 있는 것을 사용하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des9 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">10. 통로바닥에 전선 또는 이동전선 등을 설치하여 사용하지 않도록 관리하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des10 ? \"YES\" : \"NO\"}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].registrant}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].responsible}\r\n                        \r\n                      \r\n                  </Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            </Card>\r\n            </Col>\r\n          </Row>\r\n        )\r\n      }\r\n\r\n\r\n      else if(block_list[detailcnt].checktype == \"Welding\"){\r\n\r\n        return (\r\n          \r\n          <Row>\r\n            <Col lg=\"7\" md=\"12\">\r\n            <Card small>\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\">Form Example</h6>\r\n            </CardHeader>\r\n              <ListGroup flush>\r\n              <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                  <Col>\r\n                        <label htmlFor=\"feInputState\">카테고리</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].category}\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress\">체크리스트 타입</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].checktype}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">1. 화재위험작업에 대한 작업계획을 수립하였다.</label>\r\n                        <br></br>\r\n                      {block_list[detailcnt].des1 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">2. 작업장 내 위험물, 가연물의 사용·보관 현황을 파악하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des2 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">3. 위험물질로 인한 응급상황이 발생했을 때 필요한 행동에 대한 정보를 미리 준비하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des3 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">4. 작업현장에 허가받은 위험물의 종류별 기준량 이상이 되면 지역 소방기관과 관계기관에 신고하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des4 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">5. 소방서로부터 허가받은 위험물 제조소 또는 저장소 자료를 토대로 현장에 위험물의 종류별로 기준 이상의 위험물이 존재하거나 앞으로 존재하게 될 것인지의 여부를 판단하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des5 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">6. 작업자에 대해 화재예방 및 피난 교육 등을 실시하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des6 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">7. 화재위험작업 대상 작업자에게 특별안전보건교육을 실시하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des7 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">8. 산소, LPG 등 가스 용기는 전도 위험이 없는 곳에 보관하며, 사용 전 또는 사용 중인 용기와 그 밖의 용기를 명확히 구별하여 보관하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des8 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">9. 작업을 중단하거나 마치고 작업장소를 떠날 경우에는 가스 등의 공급구의 밸브나 콕을 잠구었다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des9 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">10. 인화성 가스 및 산소를 사용하여 금속을 용접·용단하는 경우, 지정된 자격증*의 보유 여부를 확인하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des10 ? \"YES\" : \"NO\"}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].registrant}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].responsible}\r\n                        \r\n                      \r\n                  </Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            </Card>\r\n            </Col>\r\n          </Row>\r\n        )\r\n      }\r\n\r\n      \r\n      else if(block_list[detailcnt].checktype == \"Construction\"){\r\n\r\n        return (\r\n          \r\n          <Row>\r\n            <Col lg=\"7\" md=\"12\">\r\n            <Card small>\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\">Form Example</h6>\r\n            </CardHeader>\r\n              <ListGroup flush>\r\n              <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                  <Col>\r\n                        <label htmlFor=\"feInputState\">카테고리</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].category}\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress\">체크리스트 타입</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].checktype}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">1. 자격을 갖춘 자에게 운전을 하도록 하였다.</label>\r\n                        <br></br>\r\n                      {block_list[detailcnt].des1 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">2. 형식신고 및 안전인증·검사 등 기계별 필요한 검사를 받았는지 확인했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des2 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">3. 건설기계의 운행경로 및 작업방법을 고려해 기계별 작업계획을 수립·이행하고, 작업지휘자를 지정하여 지휘·감독했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des3 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">4. 작업 전 운전자 및 작업자 안전교육을 실시했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des4 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">5. 작업장소의 지형 및 지반상태를 확인하고, 기계가 넘어질 우려가 없도록 조치했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des5 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">6. 작업구간에 작업자의 출입을 금지하거나 유도자를 배치하여 차량을 유도하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des6 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">7. 유도자는 정해진 신호방법에 따라 차량을 유도했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des7 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">8. 건설기계는 주된 용도로만 사용하여야 했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des8 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">9. 승차석이 아닌 곳에 작업자를 탑승시키지 않았다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des9 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">10. 지정된 제한속도를 준수하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des10 ? \"YES\" : \"NO\"}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].registrant}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].responsible}\r\n                        \r\n                      \r\n                  </Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            </Card>\r\n            </Col>\r\n          </Row>\r\n        )\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  const nextId = useRef(1);\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n    async function updateAllTransactions(e){\r\n      if(transactionInstance && !first){\r\n\r\n        console.log(transactionInstance)\r\n        let events = await transactionInstance.getPastEvents('checkTransaction', {fromBlock:0, toBlock:'latest'});\r\n        \r\n  \r\n  \r\n        for(let i = events.length - 1; i >= 0; i--){\r\n          \r\n          var time_ = moment.unix(events[i].returnValues.time);\r\n          let temp_des = [];\r\n          for(let j = 0; j < 10; j++){\r\n            let temp = 0;\r\n            if(events[i].returnValues.des[j].toString() == \"true\"){\r\n              temp = 1;\r\n            }\r\n            temp_des.push(temp)\r\n          }\r\n          \r\n          block_list.push({\r\n            id: nextId.current,\r\n            category : events[i].returnValues.category.toString(),\r\n            checktype : events[i].returnValues.checktype.toString(),\r\n            time : time_.toString(), \r\n            des1 : temp_des[0],\r\n            des2 : temp_des[1],\r\n            des3 : temp_des[2],\r\n\r\n            des4 : temp_des[3],\r\n            des5 : temp_des[4],\r\n            des6 : temp_des[5],\r\n            des7 : temp_des[6],\r\n            des8 : temp_des[7],\r\n            des9 : temp_des[8],\r\n            des10 :temp_des[9],\r\n            registrant : events[i].returnValues.registrant.toString(),\r\n            responsible : events[i].returnValues.responsible_manager.toString(),\r\n          }\r\n          )\r\n          \r\n          nextId.current += 1;\r\n  \r\n          console.log(events[i].returnValues);\r\n        }\r\n        setLoading(true);\r\n        setFirst(true);\r\n        console.log('events.length = ', events.length);\r\n        console.log(events);\r\n        console.log('block_list = ', block_list);\r\n      }\r\n  \r\n    }\r\n\r\n    updateAllTransactions();\r\n    sessionStorage.removeItem('search')\r\n\r\n}, );\r\n\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"Check List\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {Showboard()}\r\n        {/* Default Light Table */}\r\n        {/* <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            /> */}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default CheckList;\r\n\r\n","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\Documents.js",["328","329","330","331","332","333","334","335","336"],"\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Pagination from \"../pagination.js\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\n\r\nfunction Documents({transactionInstance}){\r\n  \r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [block_list, setblock_list] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [first, setFirst] = useState(false);\r\n\r\n  const [detail, setDetail] = useState(false);\r\n  const [detailcnt, setDetailcnt] = useState(-1);\r\n\r\n  const detail_click = (cnt) => {\r\n    setDetail(true);\r\n    setDetailcnt(cnt);\r\n  }\r\n\r\n  function repeatboardchild(child, start){\r\n    if(loading){\r\n\r\n      let arr = [];\r\n\r\n      if(start == 1) start = 0;\r\n      else{\r\n        start--;\r\n        start *= 10;\r\n      }\r\n  \r\n      let end = start + 10;\r\n  \r\n      if (end > child.length){\r\n        end = child.length;\r\n      }\r\n  \r\n      console.log('child = ', child);\r\n      \r\n      console.log('child.length = %d', child.length);\r\n      for(let i = start; i < end; i++){\r\n        console.log('i = %d, start = %d, end = %d', i, start, end);\r\n        arr.push(\r\n        <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n          <th scope=\"row\" >{i+1}</th>\r\n          <td >{child[i].name}</td>\r\n          <td>{child[i].responsible}</td>\r\n          <td>{child[i].filetype}</td>\r\n          <td>{child[i].filedes}</td>\r\n          <td>{child[i].time}</td>\r\n        </tr>\r\n        )\r\n      }\r\n  \r\n      return arr;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  function Showboard(){\r\n\r\n    console.log(first);\r\n    console.log(detail);\r\n\r\n    if(!detail && first){\r\n      return (\r\n        <div>\r\n        <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            />\r\n            </div>\r\n      )\r\n    }\r\n    else if (detail && first){\r\n      \r\n      return (\r\n        \r\n        <Row>\r\n          <Col lg=\"7\" md=\"12\">\r\n          <Card small>\r\n          <CardHeader className=\"border-bottom\">\r\n            <h6 className=\"m-0\">Form Example</h6>\r\n          </CardHeader>\r\n            <ListGroup flush>\r\n            <ListGroupItem className=\"p-3\">\r\n              <Row>\r\n                <Col>\r\n                      <label htmlFor=\"feInputState\">카테고리</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].category}\r\n\r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress\">파일명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].name}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].filedes}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].registrant}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].responsible}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\r\n                      <br></br>\r\n                      FileUrl :{\" \"}\r\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      {block_list[detailcnt].ipfsHash}\r\n                      </a>\r\n                    \r\n                </Col>\r\n              </Row>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n          </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const nextId = useRef(1);\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n    async function updateAllTransactions(e){\r\n      if(transactionInstance && !first){\r\n\r\n        console.log(transactionInstance)\r\n        let events = await transactionInstance.getPastEvents('documentTransaction', {fromBlock:0, toBlock:'latest'});\r\n        \r\n  \r\n  \r\n        for(let i = events.length - 1; i >= 0; i--){\r\n          \r\n          var time_ = moment.unix(events[i].returnValues.time);\r\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\r\n          fileurl += events[i].returnValues.ipfs_hash.toString();\r\n          \r\n          block_list.push({\r\n            id: nextId.current,\r\n            category : events[i].returnValues.category.toString(),\r\n            name : events[i].returnValues.name.toString(),\r\n            time : time_.toString(), \r\n            ipfsHash : fileurl,\r\n            registrant : events[i].returnValues.registrant.toString(),\r\n            responsible : events[i].returnValues.responsible_manager.toString(),\r\n            filetype : events[i].returnValues.file_type.toString(),\r\n            filedes : events[i].returnValues.file_description.toString()\r\n          }\r\n          )\r\n          \r\n          nextId.current += 1;\r\n  \r\n          console.log(events[i].returnValues);\r\n        }\r\n        setLoading(true);\r\n        setFirst(true);\r\n        console.log('events.length = ', events.length);\r\n        console.log(events);\r\n        console.log('block_list = ', block_list);\r\n      }\r\n  \r\n    }\r\n\r\n    updateAllTransactions();\r\n    sessionStorage.removeItem('search')\r\n\r\n}, );\r\n\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"Documents\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {Showboard()}\r\n        {/* Default Light Table */}\r\n        {/* <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            /> */}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default Documents;\r\n\r\n","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\RejectedTransaction.js",["337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Pagination from \"../pagination.js\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  FormTextarea,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nimport axios from 'axios';\r\n\r\nfunction RejectedTransaction({transactionInstance, account}){\r\n  \r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [block_list, setblock_list] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [first, setFirst] = useState(false);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const [detail, setDetail] = useState(false);\r\n  const [detailcnt, setDetailcnt] = useState(-1);\r\n  const [reject, setReject] = useState(false);\r\n\r\n  const detail_click = (cnt) => {\r\n    setDetail(true);\r\n    setDetailcnt(cnt);\r\n  }\r\n\r\n  const rejectOrNot = (e) => {\r\n    setReject(true);\r\n    console.log(reject);\r\n  };\r\n  \r\n\r\n  // send 전자문서 블록체인\r\n  const sendTransaction = async (e) => {\r\n\r\n    await transactionInstance.sendTrans(block_list[detailcnt].category, block_list[detailcnt].name, block_list[detailcnt].ipfsHash, block_list[detailcnt].registrant, block_list[detailcnt].responsible, block_list[detailcnt].file_type, block_list[detailcnt].file_des,{\r\n      from: account,\r\n      //value: e.web3.utils.toWei('10', \"ether\"),\r\n      gas: 1000000\r\n    })\r\n    \r\n    axios.post('http://localhost:3001/api/success_request', null, {\r\n      \r\n      params: {\r\n        'time_stamp': block_list[detailcnt].time_stamp\r\n        }\r\n    })\r\n    .then(async res => {\r\n      console.log(res)    \r\n\r\n    })\r\n    .catch()\r\n    \r\n    let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\r\n    console.log(events[events.length-1].transactionHash)\r\n    //this.updateAllTransactions();\r\n    window.location.replace(\"/\")\r\n    // submitReview();\r\n  }\r\n  \r\n  // send 체크리스트 블록체인\r\n  const sendChecklistTransaction = async (e) => {\r\n\r\n    let des = [];\r\n\r\n    des.push(block_list[detailcnt].des1);\r\n    des.push(block_list[detailcnt].des2);\r\n    des.push(block_list[detailcnt].des3);\r\n    des.push(block_list[detailcnt].des4);\r\n    des.push(block_list[detailcnt].des5);\r\n    des.push(block_list[detailcnt].des6);\r\n    des.push(block_list[detailcnt].des7);\r\n    des.push(block_list[detailcnt].des8);\r\n    des.push(block_list[detailcnt].des9);\r\n    des.push(block_list[detailcnt].des10);\r\n\r\n    await transactionInstance.sendCheckTrans(block_list[detailcnt].category, block_list[detailcnt].checktype, block_list[detailcnt].registrant, block_list[detailcnt].responsible, des, {\r\n      from: account,\r\n      //value: e.web3.utils.toWei('10', \"ether\"),\r\n      gas: 1000000\r\n    })\r\n    \r\n    axios.post('http://localhost:3001/api/success_request', null, {\r\n      \r\n      params: {\r\n        'time_stamp': block_list[detailcnt].time_stamp\r\n        }\r\n    })\r\n    .then(async res => {\r\n      console.log(res)    \r\n\r\n    })\r\n    .catch()\r\n\r\n    \r\n    let events = await transactionInstance.getPastEvents('checkTransaction', {fromBlock: 0, toBlock:'latest'});\r\n    console.log(events)\r\n    //this.updateAllTransactions();\r\n    window.location.replace(\"/\")\r\n    // submitReview();\r\n  }\r\n\r\n  \r\n  // send 수정필요\r\n  const fail_to_upload = async (e) => {\r\n\r\n    \r\n    axios.post('http://localhost:3001/api/fail_request', null, {\r\n      \r\n      params: {\r\n        'comment': comment,\r\n        'time_stamp': block_list[detailcnt].time_stamp\r\n        }\r\n    })\r\n    .then(async res => {\r\n      console.log(res)    \r\n\r\n    })\r\n    .catch()\r\n\r\n    \r\n    let events = await transactionInstance.getPastEvents('checkTransaction', {fromBlock: 0, toBlock:'latest'});\r\n    console.log(events)\r\n    //this.updateAllTransactions();\r\n    window.location.replace(\"/\")\r\n    // submitReview();\r\n  }\r\n\r\n  function repeatboardchild(child, start){\r\n    if(loading){\r\n\r\n      let arr = [];\r\n\r\n      if(start == 1) start = 0;\r\n      else{\r\n        start--;\r\n        start *= 10;\r\n      }\r\n  \r\n      let end = start + 10;\r\n  \r\n      if (end > child.length){\r\n        end = child.length;\r\n      }\r\n  \r\n      console.log('child = ', child);\r\n      \r\n      console.log('child.length = %d', child.length);\r\n      for(let i = start; i < end; i++){\r\n        console.log('i = %d, start = %d, end = %d', i, start, end);\r\n        console.log(sessionStorage.getItem('search'));\r\n        console.log(child[i].des1);\r\n        // if(sessionStorage.getItem('search') === null){\r\n          if (child[i].des1 == \"0\" || child[i].des1 == \"1\"){\r\n            arr.push(\r\n              <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n                <th scope=\"row\" >{i+1}</th>\r\n                <td >{child[i].checktype}</td>\r\n                <td>{child[i].registrant}</td>\r\n                <td>{child[i].file_type}</td>\r\n                <td>{child[i].file_des}</td>\r\n                <td>{child[i].time_stamp}</td>\r\n              </tr>\r\n              )\r\n          }\r\n          else{\r\n            arr.push(\r\n              <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n                <th scope=\"row\" >{i+1}</th>\r\n                <td >{child[i].name}</td>\r\n                <td>{child[i].registrant}</td>\r\n                <td>{child[i].file_type}</td>\r\n                <td>{child[i].file_des}</td>\r\n                <td>{child[i].time_stamp}</td>\r\n              </tr>\r\n              )\r\n          }\r\n        // }\r\n        // else if(sessionStorage.getItem('search') === child[i].name || sessionStorage.getItem('search') === child[i].responsible || sessionStorage.getItem('search') === child[i].filetype || sessionStorage.getItem('search') === child[i].filedes){\r\n        //   arr.push(\r\n        //     <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n        //       <th scope=\"row\" >{i+1}</th>\r\n        //       <td >{child[i].name}</td>\r\n        //       <td>{child[i].responsible}</td>\r\n        //       <td>{child[i].filetype}</td>\r\n        //       <td>{child[i].filedes}</td>\r\n        //       <td>{child[i].time}</td>\r\n        //     </tr>\r\n        //     )\r\n        // }\r\n      }\r\n  \r\n      return arr;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  function Showboard(){\r\n\r\n    console.log(first);\r\n    console.log(detail);\r\n\r\n    if(!detail && first){\r\n      return (\r\n        <div>\r\n        <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Form</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            />\r\n            </div>\r\n      )\r\n    }\r\n    else if ((detail && first)){\r\n      \r\n      if(block_list[detailcnt].checktype == \"Electricity\"){\r\n\r\n        return (\r\n          \r\n          <Row>\r\n            <Col lg=\"7\" md=\"12\">\r\n            <Card small>\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\">Form Example</h6>\r\n            </CardHeader>\r\n              <ListGroup flush>\r\n              <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                  <Col>\r\n                        <label htmlFor=\"feInputState\" style={{color: 'red'}}>Comment</label>\r\n                        <br></br>\r\n                        <a style={{color: 'red'}}>{block_list[detailcnt].comment}</a>\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                        <label htmlFor=\"feInputState\">카테고리</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].category}\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress\">체크리스트 타입</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].checktype}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">1. 감전위험이 있는 전기 기계·기구 또는 전로의 설치·해체·정비·점검 등의 작업을 하는 하는 경우 작업자의 자격을 확인하였다.</label>\r\n                        <br></br>\r\n                      {block_list[detailcnt].des1 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">2. 감전의 위험이 있는 작업에 종사하는 경우 절연용 보호구를 지급하고 작업자에게 착용하도록 하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des2 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">3. 가공전로에 근접하여 비계를 설치하는 경우에는 가공전로를 이설하거나 가공전로에 절연용 방호구를 장착하는 등 가공전로와의 접촉을 방지하기 위해 조치 하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des3 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">4. 임시 수전설비의 주변은 관계 작업자가 아닌 사람의 출입을 금지하고, 위험표시 등의 방법으로 방호를 강화하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des4 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">5. 가설 배전반·분전반은 충전부가 노출되지 않도록 폐쇄형 외함이 있는 구조로 설치하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des5 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">6. 충전부는 충분한 절연효과가 있는 방호망이나 절연덮개를 설치하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des6 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">7. 분전반 등 전기 기계·기구의 금속제 외함, 금속제 외피 및 철대는 접지를 실시하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des7 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">8. 배선 또는 이동전선의 절연피복이 손상되거나 노화됨으로 인한 감전의 위험을 방지하기 위한 조치를 하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des8 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">9. 습윤한 장소의 이동전선 및 부속 접속기구는 충분한 절연효과가 있는 것을 사용하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des9 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">10. 통로바닥에 전선 또는 이동전선 등을 설치하여 사용하지 않도록 관리하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des10 ? \"YES\" : \"NO\"}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].registrant}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].responsible}\r\n                        <br></br>\r\n                        <br></br>\r\n  \r\n                        \r\n                      \r\n                  </Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            </Card>\r\n            </Col>\r\n          </Row>\r\n        )\r\n      }\r\n\r\n\r\n      else if(block_list[detailcnt].checktype == \"Welding\"){\r\n\r\n        return (\r\n          \r\n          <Row>\r\n            <Col lg=\"7\" md=\"12\">\r\n            <Card small>\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\">Form Example</h6>\r\n            </CardHeader>\r\n              <ListGroup flush>\r\n              <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                  <Col>\r\n                        <label htmlFor=\"feInputState\" style={{color: 'red'}}>Comment</label>\r\n                        <br></br>\r\n                        <a style={{color: 'red'}}>{block_list[detailcnt].comment}</a>\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                        <label htmlFor=\"feInputState\">카테고리</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].category}\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress\">체크리스트 타입</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].checktype}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">1. 화재위험작업에 대한 작업계획을 수립하였다.</label>\r\n                        <br></br>\r\n                      {block_list[detailcnt].des1 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">2. 작업장 내 위험물, 가연물의 사용·보관 현황을 파악하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des2 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">3. 위험물질로 인한 응급상황이 발생했을 때 필요한 행동에 대한 정보를 미리 준비하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des3 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">4. 작업현장에 허가받은 위험물의 종류별 기준량 이상이 되면 지역 소방기관과 관계기관에 신고하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des4 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">5. 소방서로부터 허가받은 위험물 제조소 또는 저장소 자료를 토대로 현장에 위험물의 종류별로 기준 이상의 위험물이 존재하거나 앞으로 존재하게 될 것인지의 여부를 판단하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des5 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">6. 작업자에 대해 화재예방 및 피난 교육 등을 실시하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des6 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">7. 화재위험작업 대상 작업자에게 특별안전보건교육을 실시하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des7 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">8. 산소, LPG 등 가스 용기는 전도 위험이 없는 곳에 보관하며, 사용 전 또는 사용 중인 용기와 그 밖의 용기를 명확히 구별하여 보관하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des8 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">9. 작업을 중단하거나 마치고 작업장소를 떠날 경우에는 가스 등의 공급구의 밸브나 콕을 잠구었다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des9 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">10. 인화성 가스 및 산소를 사용하여 금속을 용접·용단하는 경우, 지정된 자격증*의 보유 여부를 확인하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des10 ? \"YES\" : \"NO\"}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].registrant}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].responsible}\r\n                        <br></br>\r\n                        <br></br>\r\n                        \r\n                      \r\n                  </Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            </Card>\r\n            </Col>\r\n          </Row>\r\n        )\r\n      }\r\n\r\n      \r\n      else if(block_list[detailcnt].checktype == \"Construction\"){\r\n\r\n        return (\r\n          \r\n          <Row>\r\n            <Col lg=\"7\" md=\"12\">\r\n            <Card small>\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\">Form Example</h6>\r\n            </CardHeader>\r\n              <ListGroup flush>\r\n              <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                  <Col>\r\n                        <label htmlFor=\"feInputState\" style={{color: 'red'}}>Comment</label>\r\n                        <br></br>\r\n                        <a style={{color: 'red'}}>{block_list[detailcnt].comment}</a>\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                        <label htmlFor=\"feInputState\">카테고리</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].category}\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress\">체크리스트 타입</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].checktype}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">1. 자격을 갖춘 자에게 운전을 하도록 하였다.</label>\r\n                        <br></br>\r\n                      {block_list[detailcnt].des1 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">2. 형식신고 및 안전인증·검사 등 기계별 필요한 검사를 받았는지 확인했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des2 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">3. 건설기계의 운행경로 및 작업방법을 고려해 기계별 작업계획을 수립·이행하고, 작업지휘자를 지정하여 지휘·감독했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des3 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">4. 작업 전 운전자 및 작업자 안전교육을 실시했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des4 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">5. 작업장소의 지형 및 지반상태를 확인하고, 기계가 넘어질 우려가 없도록 조치했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des5 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">6. 작업구간에 작업자의 출입을 금지하거나 유도자를 배치하여 차량을 유도하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des6 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">7. 유도자는 정해진 신호방법에 따라 차량을 유도했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des7 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">8. 건설기계는 주된 용도로만 사용하여야 했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des8 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">9. 승차석이 아닌 곳에 작업자를 탑승시키지 않았다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des9 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">10. 지정된 제한속도를 준수하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des10 ? \"YES\" : \"NO\"}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].registrant}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].responsible}\r\n                        <br></br>\r\n                        <br></br>\r\n  \r\n                        \r\n                      \r\n                  </Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            </Card>\r\n            </Col>\r\n          </Row>\r\n        )\r\n      }\r\n\r\n      else{\r\n      \r\n        return (\r\n        \r\n          <Row>\r\n            <Col lg=\"7\" md=\"12\">\r\n            <Card small>\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\">Rejected Transaction</h6>\r\n            </CardHeader>\r\n              <ListGroup flush>\r\n              <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                  <Col>\r\n                        <label htmlFor=\"feInputState\" style={{color: 'red'}}>Comment</label>\r\n                        <br></br>\r\n                        <a style={{color:'red'}}>{block_list[detailcnt].comment}</a>\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n\r\n                        <label htmlFor=\"feInputState\">카테고리</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].category}\r\n  \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress\">파일명</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].name}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].file_des}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].registrant}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].responsible}\r\n                        \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">파일 URL</label>\r\n                        <br></br>\r\n                        FileUrl :{\" \"}\r\n                        <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        {block_list[detailcnt].ipfsHash}\r\n                        </a>\r\n                        <br></br>\r\n                        <br></br>\r\n  \r\n  \r\n                      \r\n                  </Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            </Card>\r\n            </Col>\r\n          </Row>\r\n        )\r\n\r\n      }\r\n      \r\n    }\r\n\r\n  }\r\n\r\n\r\n  const nextId = useRef(1);\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n\r\n\r\n    async function updateAllTransactions(e){\r\n      if(transactionInstance && !first){\r\n\r\n\r\n    \r\n        await axios.post('http://localhost:3001/api/select_request', null, {\r\n          params: {\r\n          }\r\n        })\r\n        .then(async res => {\r\n          console.log(res)    \r\n    \r\n          for(let i = 0; i < res.data.length; i++){\r\n               \r\n\r\n              \r\n              block_list.push({\r\n                id: nextId.current,\r\n                request_user : res.data[i].request_user,\r\n                receive_user : res.data[i].receive_user,\r\n                category : res.data[i].category,\r\n                name : res.data[i].name,\r\n                time_stamp : res.data[i].time_stamp,\r\n                file_des : res.data[i].file_des,\r\n                checktype : res.data[i].check_type,\r\n                file_type : res.data[i].file_type,\r\n                ipfsHash : res.data[i].ipfs_hash,\r\n                des1 : res.data[i].des1,\r\n                des2 : res.data[i].des2,\r\n                des3 : res.data[i].des3,\r\n      \r\n                des4 : res.data[i].des4,\r\n                des5 : res.data[i].des5,\r\n                des6 : res.data[i].des6,\r\n                des7 : res.data[i].des7,\r\n                des8 : res.data[i].des8,\r\n                des9 : res.data[i].des9,\r\n                des10 : res.data[i].des10,\r\n                registrant : res.data[i].registrant,\r\n                responsible : res.data[i].responsible_manager,\r\n                comment : res.data[i].receive_comment,\r\n              }\r\n              )\r\n              \r\n              nextId.current += 1;\r\n\r\n            \r\n\r\n          }\r\n    \r\n        })\r\n        .catch(e)\r\n\r\n        setLoading(true);\r\n        setFirst(true);\r\n        console.log('block_list = ', block_list);\r\n\r\n      }\r\n\r\n  \r\n    }\r\n\r\n    updateAllTransactions();\r\n    sessionStorage.removeItem('search')\r\n\r\n}, );\r\n\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"Rejected Transactions\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {Showboard()}\r\n        {/* Default Light Table */}\r\n        {/* <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            /> */}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default RejectedTransaction;","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\GrantTransaction.js",["362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Pagination from \"../pagination.js\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  FormTextarea,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nimport axios from 'axios';\r\n\r\nfunction GrantTransaction({transactionInstance, account}){\r\n  \r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [block_list, setblock_list] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [first, setFirst] = useState(false);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const [detail, setDetail] = useState(false);\r\n  const [detailcnt, setDetailcnt] = useState(-1);\r\n  const [reject, setReject] = useState(false);\r\n\r\n  const detail_click = (cnt) => {\r\n    setDetail(true);\r\n    setDetailcnt(cnt);\r\n  }\r\n\r\n  const rejectOrNot = (e) => {\r\n    setReject(true);\r\n    console.log(reject);\r\n  };\r\n  \r\n\r\n  // send 전자문서 블록체인\r\n  const sendTransaction = async (e) => {\r\n\r\n    await transactionInstance.sendTrans(block_list[detailcnt].category, block_list[detailcnt].name, block_list[detailcnt].ipfsHash, block_list[detailcnt].registrant, block_list[detailcnt].responsible, block_list[detailcnt].file_type, block_list[detailcnt].file_des,{\r\n      from: account,\r\n      //value: e.web3.utils.toWei('10', \"ether\"),\r\n      gas: 1000000\r\n    })\r\n    \r\n    axios.post('http://localhost:3001/api/success_request', null, {\r\n      \r\n      params: {\r\n        'time_stamp': block_list[detailcnt].time_stamp\r\n        }\r\n    })\r\n    .then(async res => {\r\n      console.log(res)    \r\n\r\n    })\r\n    .catch()\r\n    \r\n    let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\r\n    console.log(events[events.length-1].transactionHash)\r\n    //this.updateAllTransactions();\r\n    window.location.replace(\"/\")\r\n    // submitReview();\r\n  }\r\n  \r\n  // send 체크리스트 블록체인\r\n  const sendChecklistTransaction = async (e) => {\r\n\r\n    let des = [];\r\n\r\n    des.push(block_list[detailcnt].des1);\r\n    des.push(block_list[detailcnt].des2);\r\n    des.push(block_list[detailcnt].des3);\r\n    des.push(block_list[detailcnt].des4);\r\n    des.push(block_list[detailcnt].des5);\r\n    des.push(block_list[detailcnt].des6);\r\n    des.push(block_list[detailcnt].des7);\r\n    des.push(block_list[detailcnt].des8);\r\n    des.push(block_list[detailcnt].des9);\r\n    des.push(block_list[detailcnt].des10);\r\n\r\n    await transactionInstance.sendCheckTrans(block_list[detailcnt].category, block_list[detailcnt].checktype, block_list[detailcnt].registrant, block_list[detailcnt].responsible, des, {\r\n      from: account,\r\n      //value: e.web3.utils.toWei('10', \"ether\"),\r\n      gas: 1000000\r\n    })\r\n    \r\n    axios.post('http://localhost:3001/api/success_request', null, {\r\n      \r\n      params: {\r\n        'time_stamp': block_list[detailcnt].time_stamp\r\n        }\r\n    })\r\n    .then(async res => {\r\n      console.log(res)    \r\n\r\n    })\r\n    .catch()\r\n\r\n    \r\n    let events = await transactionInstance.getPastEvents('checkTransaction', {fromBlock: 0, toBlock:'latest'});\r\n    console.log(events)\r\n    //this.updateAllTransactions();\r\n    window.location.replace(\"/\")\r\n    // submitReview();\r\n  }\r\n\r\n  \r\n  // send 수정필요\r\n  const fail_to_upload = async (e) => {\r\n\r\n    \r\n    axios.post('http://localhost:3001/api/fail_request', null, {\r\n      \r\n      params: {\r\n        'comment': comment,\r\n        'time_stamp': block_list[detailcnt].time_stamp\r\n        }\r\n    })\r\n    .then(async res => {\r\n      console.log(res)    \r\n\r\n    })\r\n    .catch()\r\n\r\n    \r\n    let events = await transactionInstance.getPastEvents('checkTransaction', {fromBlock: 0, toBlock:'latest'});\r\n    console.log(events)\r\n    //this.updateAllTransactions();\r\n    window.location.replace(\"/\")\r\n    // submitReview();\r\n  }\r\n\r\n  function repeatboardchild(child, start){\r\n    if(loading){\r\n\r\n      let arr = [];\r\n\r\n      if(start == 1) start = 0;\r\n      else{\r\n        start--;\r\n        start *= 10;\r\n      }\r\n  \r\n      let end = start + 10;\r\n  \r\n      if (end > child.length){\r\n        end = child.length;\r\n      }\r\n  \r\n      console.log('child = ', child);\r\n      \r\n      console.log('child.length = %d', child.length);\r\n      for(let i = start; i < end; i++){\r\n        console.log('i = %d, start = %d, end = %d', i, start, end);\r\n        console.log(sessionStorage.getItem('search'));\r\n        console.log(child[i].des1);\r\n        // if(sessionStorage.getItem('search') === null){\r\n          if (child[i].des1 == \"0\" || child[i].des1 == \"1\"){\r\n            arr.push(\r\n              <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n                <th scope=\"row\" >{i+1}</th>\r\n                <td >{child[i].checktype}</td>\r\n                <td>{child[i].registrant}</td>\r\n                <td>{child[i].file_type}</td>\r\n                <td>{child[i].file_des}</td>\r\n                <td>{child[i].time_stamp}</td>\r\n              </tr>\r\n              )\r\n          }\r\n          else{\r\n            arr.push(\r\n              <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n                <th scope=\"row\" >{i+1}</th>\r\n                <td >{child[i].name}</td>\r\n                <td>{child[i].registrant}</td>\r\n                <td>{child[i].file_type}</td>\r\n                <td>{child[i].file_des}</td>\r\n                <td>{child[i].time_stamp}</td>\r\n              </tr>\r\n              )\r\n          }\r\n        // }\r\n        // else if(sessionStorage.getItem('search') === child[i].name || sessionStorage.getItem('search') === child[i].responsible || sessionStorage.getItem('search') === child[i].filetype || sessionStorage.getItem('search') === child[i].filedes){\r\n        //   arr.push(\r\n        //     <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n        //       <th scope=\"row\" >{i+1}</th>\r\n        //       <td >{child[i].name}</td>\r\n        //       <td>{child[i].responsible}</td>\r\n        //       <td>{child[i].filetype}</td>\r\n        //       <td>{child[i].filedes}</td>\r\n        //       <td>{child[i].time}</td>\r\n        //     </tr>\r\n        //     )\r\n        // }\r\n      }\r\n  \r\n      return arr;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  function Showboard(){\r\n\r\n    console.log(first);\r\n    console.log(detail);\r\n\r\n    if(!detail && first){\r\n      return (\r\n        <div>\r\n        <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Form</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            />\r\n            </div>\r\n      )\r\n    }\r\n    else if ((detail && first)){\r\n      \r\n      if(block_list[detailcnt].checktype == \"Electricity\"){\r\n\r\n        return (\r\n          \r\n          <Row>\r\n            <Col lg=\"7\" md=\"12\">\r\n            <Card small>\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\">Form Example</h6>\r\n            </CardHeader>\r\n              <ListGroup flush>\r\n              <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                  <Col>\r\n                        <label htmlFor=\"feInputState\">카테고리</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].category}\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress\">체크리스트 타입</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].checktype}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">1. 감전위험이 있는 전기 기계·기구 또는 전로의 설치·해체·정비·점검 등의 작업을 하는 하는 경우 작업자의 자격을 확인하였다.</label>\r\n                        <br></br>\r\n                      {block_list[detailcnt].des1 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">2. 감전의 위험이 있는 작업에 종사하는 경우 절연용 보호구를 지급하고 작업자에게 착용하도록 하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des2 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">3. 가공전로에 근접하여 비계를 설치하는 경우에는 가공전로를 이설하거나 가공전로에 절연용 방호구를 장착하는 등 가공전로와의 접촉을 방지하기 위해 조치 하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des3 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">4. 임시 수전설비의 주변은 관계 작업자가 아닌 사람의 출입을 금지하고, 위험표시 등의 방법으로 방호를 강화하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des4 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">5. 가설 배전반·분전반은 충전부가 노출되지 않도록 폐쇄형 외함이 있는 구조로 설치하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des5 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">6. 충전부는 충분한 절연효과가 있는 방호망이나 절연덮개를 설치하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des6 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">7. 분전반 등 전기 기계·기구의 금속제 외함, 금속제 외피 및 철대는 접지를 실시하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des7 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">8. 배선 또는 이동전선의 절연피복이 손상되거나 노화됨으로 인한 감전의 위험을 방지하기 위한 조치를 하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des8 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">9. 습윤한 장소의 이동전선 및 부속 접속기구는 충분한 절연효과가 있는 것을 사용하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des9 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">10. 통로바닥에 전선 또는 이동전선 등을 설치하여 사용하지 않도록 관리하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des10 ? \"YES\" : \"NO\"}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].registrant}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].responsible}\r\n                        <br></br>\r\n                        <br></br>\r\n  \r\n                        {/* {reject == false && (\r\n                          <div>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={sendTransaction}>확인</Button>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" value={reject} onClick={rejectOrNot}>수정 필요</Button>\r\n                          </div>\r\n                        )}; */}\r\n  \r\n                        {reject == false && (\r\n                          <div>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={sendChecklistTransaction}>확인</Button>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" value={reject} onClick={rejectOrNot}>수정 필요</Button>\r\n                          </div>\r\n                        )}\r\n                        {reject == true && (\r\n                          <div>\r\n                              <label htmlFor=\"feInputAddress2\" style={{color: 'red'}}>수정 사항</label>\r\n                              <FormTextarea \r\n                                  id=\"feInputAddress2\"\r\n                                  placeholder=\"수정사항을 입력하세요\"\r\n                                  onChange = {(event) => setComment(event.target.value)}\r\n                              />\r\n                              <br></br>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" value={reject} onClick={fail_to_upload}>수정 요청</Button>\r\n                          </div>\r\n                        )}\r\n                        \r\n                      \r\n                  </Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            </Card>\r\n            </Col>\r\n          </Row>\r\n        )\r\n      }\r\n\r\n\r\n      else if(block_list[detailcnt].checktype == \"Welding\"){\r\n\r\n        return (\r\n          \r\n          <Row>\r\n            <Col lg=\"7\" md=\"12\">\r\n            <Card small>\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\">Form Example</h6>\r\n            </CardHeader>\r\n              <ListGroup flush>\r\n              <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                  <Col>\r\n                        <label htmlFor=\"feInputState\">카테고리</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].category}\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress\">체크리스트 타입</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].checktype}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">1. 화재위험작업에 대한 작업계획을 수립하였다.</label>\r\n                        <br></br>\r\n                      {block_list[detailcnt].des1 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">2. 작업장 내 위험물, 가연물의 사용·보관 현황을 파악하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des2 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">3. 위험물질로 인한 응급상황이 발생했을 때 필요한 행동에 대한 정보를 미리 준비하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des3 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">4. 작업현장에 허가받은 위험물의 종류별 기준량 이상이 되면 지역 소방기관과 관계기관에 신고하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des4 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">5. 소방서로부터 허가받은 위험물 제조소 또는 저장소 자료를 토대로 현장에 위험물의 종류별로 기준 이상의 위험물이 존재하거나 앞으로 존재하게 될 것인지의 여부를 판단하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des5 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">6. 작업자에 대해 화재예방 및 피난 교육 등을 실시하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des6 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">7. 화재위험작업 대상 작업자에게 특별안전보건교육을 실시하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des7 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">8. 산소, LPG 등 가스 용기는 전도 위험이 없는 곳에 보관하며, 사용 전 또는 사용 중인 용기와 그 밖의 용기를 명확히 구별하여 보관하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des8 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">9. 작업을 중단하거나 마치고 작업장소를 떠날 경우에는 가스 등의 공급구의 밸브나 콕을 잠구었다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des9 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">10. 인화성 가스 및 산소를 사용하여 금속을 용접·용단하는 경우, 지정된 자격증*의 보유 여부를 확인하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des10 ? \"YES\" : \"NO\"}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].registrant}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].responsible}\r\n                        <br></br>\r\n                        <br></br>\r\n  \r\n                        {/* {reject == false && (\r\n                          <div>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={sendTransaction}>확인</Button>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" value={reject} onClick={rejectOrNot}>수정 필요</Button>\r\n                          </div>\r\n                        )}; */}\r\n  \r\n                        {reject == false && (\r\n                          <div>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={sendChecklistTransaction}>확인</Button>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" value={reject} onClick={rejectOrNot}>수정 필요</Button>\r\n                          </div>\r\n                        )}\r\n                        {reject == true && (\r\n                          <div>\r\n                              <label htmlFor=\"feInputAddress2\" style={{color: 'red'}}>수정 사항</label>\r\n                              <FormTextarea \r\n                                  id=\"feInputAddress2\"\r\n                                  placeholder=\"수정사항을 입력하세요\"\r\n                                  onChange = {(event) => setComment(event.target.value)}\r\n                              />\r\n                              <br></br>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" value={reject} onClick={fail_to_upload}>수정 요청</Button>\r\n                          </div>\r\n                        )}\r\n                        \r\n                      \r\n                  </Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            </Card>\r\n            </Col>\r\n          </Row>\r\n        )\r\n      }\r\n\r\n      \r\n      else if(block_list[detailcnt].checktype == \"Construction\"){\r\n\r\n        return (\r\n          \r\n          <Row>\r\n            <Col lg=\"7\" md=\"12\">\r\n            <Card small>\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\">Form Example</h6>\r\n            </CardHeader>\r\n              <ListGroup flush>\r\n              <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                  <Col>\r\n                        <label htmlFor=\"feInputState\">카테고리</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].category}\r\n\r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress\">체크리스트 타입</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].checktype}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">1. 자격을 갖춘 자에게 운전을 하도록 하였다.</label>\r\n                        <br></br>\r\n                      {block_list[detailcnt].des1 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">2. 형식신고 및 안전인증·검사 등 기계별 필요한 검사를 받았는지 확인했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des2 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">3. 건설기계의 운행경로 및 작업방법을 고려해 기계별 작업계획을 수립·이행하고, 작업지휘자를 지정하여 지휘·감독했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des3 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">4. 작업 전 운전자 및 작업자 안전교육을 실시했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des4 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">5. 작업장소의 지형 및 지반상태를 확인하고, 기계가 넘어질 우려가 없도록 조치했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des5 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">6. 작업구간에 작업자의 출입을 금지하거나 유도자를 배치하여 차량을 유도하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des6 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">7. 유도자는 정해진 신호방법에 따라 차량을 유도했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des7 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">8. 건설기계는 주된 용도로만 사용하여야 했다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des8 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">9. 승차석이 아닌 곳에 작업자를 탑승시키지 않았다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des9 ? \"YES\" : \"NO\"}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">10. 지정된 제한속도를 준수하였다.</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].des10 ? \"YES\" : \"NO\"}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].registrant}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].responsible}\r\n                        <br></br>\r\n                        <br></br>\r\n  \r\n                        {/* {reject == false && (\r\n                          <div>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={sendTransaction}>확인</Button>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" value={reject} onClick={rejectOrNot}>수정 필요</Button>\r\n                          </div>\r\n                        )}; */}\r\n  \r\n                        {reject == false && (\r\n                          <div>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={sendChecklistTransaction}>확인</Button>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" value={reject} onClick={rejectOrNot}>수정 필요</Button>\r\n                          </div>\r\n                        )}\r\n                        {reject == true && (\r\n                          <div>\r\n                              <label htmlFor=\"feInputAddress2\" style={{color: 'red'}}>수정 사항</label>\r\n                              <FormTextarea \r\n                                  id=\"feInputAddress2\"\r\n                                  placeholder=\"수정사항을 입력하세요\"\r\n                                  onChange = {(event) => setComment(event.target.value)}\r\n                              />\r\n                              <br></br>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" value={reject} onClick={fail_to_upload}>수정 요청</Button>\r\n                          </div>\r\n                        )}\r\n                        \r\n                      \r\n                  </Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            </Card>\r\n            </Col>\r\n          </Row>\r\n        )\r\n      }\r\n\r\n      else{\r\n      \r\n        return (\r\n        \r\n          <Row>\r\n            <Col lg=\"7\" md=\"12\">\r\n            <Card small>\r\n            <CardHeader className=\"border-bottom\">\r\n              <h6 className=\"m-0\">Grant Transaction</h6>\r\n            </CardHeader>\r\n              <ListGroup flush>\r\n              <ListGroupItem className=\"p-3\">\r\n                <Row>\r\n                  <Col>\r\n                        <label htmlFor=\"feInputState\">카테고리</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].category}\r\n  \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress\">파일명</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].name}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].file_des}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].registrant}\r\n                      \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                        <br></br>\r\n                        {block_list[detailcnt].responsible}\r\n                        \r\n                        <br></br>\r\n                        <br></br>\r\n                        <label htmlFor=\"feInputAddress2\">파일 URL</label>\r\n                        <br></br>\r\n                        FileUrl :{\" \"}\r\n                        <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        {block_list[detailcnt].ipfsHash}\r\n                        </a>\r\n                        <br></br>\r\n                        <br></br>\r\n  \r\n                        {/* {reject == false && (\r\n                          <div>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={sendTransaction}>확인</Button>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" value={reject} onClick={rejectOrNot}>수정 필요</Button>\r\n                          </div>\r\n                        )}; */}\r\n  \r\n                        {reject == false && (\r\n                          <div>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={sendTransaction}>확인</Button>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" value={reject} onClick={rejectOrNot}>수정 필요</Button>\r\n                          </div>\r\n                        )}\r\n                        {reject == true && (\r\n                          <div>\r\n                              <label htmlFor=\"feInputAddress2\" style={{color: 'red'}}>수정 사항</label>\r\n                              <FormTextarea \r\n                                  id=\"feInputAddress2\"\r\n                                  placeholder=\"수정사항을 입력하세요\"\r\n                                  onChange = {(event) => setComment(event.target.value)}\r\n                              />\r\n                              <br></br>\r\n                              <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" value={reject} onClick={fail_to_upload}>수정 요청</Button>\r\n                          </div>\r\n                        )}\r\n                      \r\n                  </Col>\r\n                </Row>\r\n              </ListGroupItem>\r\n            </ListGroup>\r\n            </Card>\r\n            </Col>\r\n          </Row>\r\n        )\r\n\r\n      }\r\n      \r\n    }\r\n\r\n  }\r\n\r\n\r\n  const nextId = useRef(1);\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n\r\n\r\n    async function updateAllTransactions(e){\r\n      if(transactionInstance && !first){\r\n\r\n\r\n    \r\n        await axios.post('http://localhost:3001/api/select_request', null, {\r\n          params: {\r\n          }\r\n        })\r\n        .then(async res => {\r\n          console.log(res)    \r\n    \r\n          for(let i = 0; i < res.data.length; i++){\r\n               \r\n            if (res.data[i].receive_user_check == 0){\r\n              \r\n              block_list.push({\r\n                id: nextId.current,\r\n                request_user : res.data[i].request_user,\r\n                receive_user : res.data[i].receive_user,\r\n                category : res.data[i].category,\r\n                name : res.data[i].name,\r\n                time_stamp : res.data[i].time_stamp,\r\n                file_des : res.data[i].file_des,\r\n                checktype : res.data[i].check_type,\r\n                file_type : res.data[i].file_type,\r\n                ipfsHash : res.data[i].ipfs_hash,\r\n                des1 : res.data[i].des1,\r\n                des2 : res.data[i].des2,\r\n                des3 : res.data[i].des3,\r\n      \r\n                des4 : res.data[i].des4,\r\n                des5 : res.data[i].des5,\r\n                des6 : res.data[i].des6,\r\n                des7 : res.data[i].des7,\r\n                des8 : res.data[i].des8,\r\n                des9 : res.data[i].des9,\r\n                des10 : res.data[i].des10,\r\n                registrant : res.data[i].registrant,\r\n                responsible : res.data[i].responsible_manager,\r\n              }\r\n              )\r\n              \r\n              nextId.current += 1;\r\n\r\n            }\r\n\r\n          }\r\n    \r\n        })\r\n        .catch(e)\r\n\r\n        setLoading(true);\r\n        setFirst(true);\r\n        console.log('block_list = ', block_list);\r\n\r\n      }\r\n\r\n  \r\n    }\r\n\r\n    updateAllTransactions();\r\n    sessionStorage.removeItem('search')\r\n\r\n}, );\r\n\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"Grant Transactions\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {Showboard()}\r\n        {/* Default Light Table */}\r\n        {/* <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            /> */}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default GrantTransaction;","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\WriteTransaction.js",["385","386","387","388"],"import Editor from \"../Editor\"\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody, Button } from \"shards-react\";\r\n\r\n\r\nfunction WriteTransaction({transactionInstance, account}){\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        {/* Page Header */}\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"Add New Transaction\" className=\"text-sm-left\" />\r\n        </Row>\r\n    \r\n\r\n        {/* Editor */}\r\n        <Row>\r\n          <Col lg=\"7\" md=\"12\">\r\n            <Editor transactionInstance={transactionInstance} account={account} />\r\n          </Col>\r\n        </Row>\r\n\r\n      </Container>\r\n      \r\n    )\r\n}\r\n\r\nexport default WriteTransaction;\r\n","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pages\\search_result.js",["389","390","391","392","393","394","395","396","397"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody } from \"shards-react\";\r\nimport PageTitle from \"../common/PageTitle\";\r\nimport Pagination from \"../pagination.js\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\n\r\n\r\nfunction Search_Result({transactionInstance}){\r\n  \r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(1);\r\n  const [block_list, setblock_list] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [first, setFirst] = useState(false);\r\n\r\n  const [detail, setDetail] = useState(false);\r\n  const [detailcnt, setDetailcnt] = useState(-1);\r\n\r\n  const detail_click = (cnt) => {\r\n    setDetail(true);\r\n    setDetailcnt(cnt);\r\n  }\r\n\r\n  function repeatboardchild(child, start){\r\n    if(loading){\r\n\r\n      let arr = [];\r\n\r\n      if(start == 1) start = 0;\r\n      else{\r\n        start--;\r\n        start *= 10;\r\n      }\r\n  \r\n      let end = start + 10;\r\n  \r\n      if (end > child.length){\r\n        end = child.length;\r\n      }\r\n  \r\n      console.log('child = ', child);\r\n      \r\n      console.log('child.length = %d', child.length);\r\n      for(let i = start; i < end; i++){\r\n        console.log('i = %d, start = %d, end = %d', i, start, end);\r\n        console.log(sessionStorage.getItem('search'));\r\n        if(sessionStorage.getItem('search') === null){\r\n          arr.push(\r\n            <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n              <th scope=\"row\" >{i+1}</th>\r\n              <td >{child[i].name}</td>\r\n              <td>{child[i].responsible}</td>\r\n              <td>{child[i].filetype}</td>\r\n              <td>{child[i].filedes}</td>\r\n              <td>{child[i].time}</td>\r\n            </tr>\r\n            )\r\n        }\r\n        else if(sessionStorage.getItem('search') === child[i].name || sessionStorage.getItem('search') === child[i].responsible || sessionStorage.getItem('search') === child[i].filetype || sessionStorage.getItem('search') === child[i].filedes){\r\n          arr.push(\r\n            <tr key={i} onClick={() => detail_click(i)} style={{cursor: \"pointer\"}}>\r\n              <th scope=\"row\" >{i+1}</th>\r\n              <td >{child[i].name}</td>\r\n              <td>{child[i].responsible}</td>\r\n              <td>{child[i].filetype}</td>\r\n              <td>{child[i].filedes}</td>\r\n              <td>{child[i].time}</td>\r\n            </tr>\r\n            )\r\n        }\r\n      }\r\n  \r\n      return arr;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  function Showboard(){\r\n\r\n    console.log(first);\r\n    console.log(detail);\r\n\r\n    if(!detail && first){\r\n      return (\r\n        <div>\r\n        <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            />\r\n            </div>\r\n      )\r\n    }\r\n    else if (detail && first){\r\n      \r\n      return (\r\n        \r\n        <Row>\r\n          <Col lg=\"7\" md=\"12\">\r\n          <Card small>\r\n          <CardHeader className=\"border-bottom\">\r\n            <h6 className=\"m-0\">Form Example</h6>\r\n          </CardHeader>\r\n            <ListGroup flush>\r\n            <ListGroupItem className=\"p-3\">\r\n              <Row>\r\n                <Col>\r\n                      <label htmlFor=\"feInputState\">카테고리</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].category}\r\n\r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress\">파일명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].name}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].filedes}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].registrant}\r\n                    \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                      <br></br>\r\n                      {block_list[detailcnt].responsible}\r\n                      \r\n                      <br></br>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">파일 URL</label>\r\n                      <br></br>\r\n                      FileUrl :{\" \"}\r\n                      <a href={block_list[detailcnt].ipfsHash} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      {block_list[detailcnt].ipfsHash}\r\n                      </a>\r\n                    \r\n                </Col>\r\n              </Row>\r\n            </ListGroupItem>\r\n          </ListGroup>\r\n          </Card>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const nextId = useRef(1);\r\n  \r\n  \r\n  useEffect(() => {\r\n\r\n\r\n    async function updateAllTransactions(e){\r\n      if(transactionInstance && !first){\r\n\r\n        console.log(transactionInstance)\r\n        let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock:0, toBlock:'latest'});\r\n        \r\n  \r\n  \r\n        for(let i = events.length - 1; i >= 0; i--){\r\n          \r\n          var time_ = moment.unix(events[i].returnValues.time);\r\n          var fileurl = 'https://ipfs.infura.io/ipfs/';\r\n          fileurl += events[i].returnValues.ipfs_hash.toString();\r\n          \r\n          console.log(fileurl)\r\n          \r\n          block_list.push({\r\n            id: nextId.current,\r\n            category : events[i].returnValues.category.toString(),\r\n            name : events[i].returnValues.name.toString(),\r\n            time : time_.toString(), \r\n            ipfsHash : fileurl,\r\n            registrant : events[i].returnValues.registrant.toString(),\r\n            responsible : events[i].returnValues.responsible_manager.toString(),\r\n            filetype : events[i].returnValues.file_type.toString(),\r\n            filedes : events[i].returnValues.file_description.toString()\r\n          }\r\n          )\r\n          \r\n          nextId.current += 1;\r\n  \r\n          console.log(events[i].returnValues);\r\n        }\r\n        setLoading(true);\r\n        setFirst(true);\r\n        console.log('events.length = ', events.length);\r\n        console.log(events);\r\n        console.log('block_list = ', block_list);\r\n      }\r\n  \r\n    }\r\n\r\n    updateAllTransactions();\r\n    // sessionStorage.removeItem('search')\r\n\r\n}, );\r\n\r\n    return(\r\n      <Container fluid className=\"main-content-container px-4\">\r\n        <Row noGutters className=\"page-header py-4\">\r\n          <PageTitle sm=\"4\" title=\"Results\" className=\"text-sm-left\" />\r\n        </Row>\r\n        {Showboard()}\r\n        {/* Default Light Table */}\r\n        {/* <Row>\r\n          <Col>\r\n            <Card small className=\"mb-4\">\r\n              <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Active Users</h6>\r\n              </CardHeader>\r\n              <CardBody className=\"p-0 pb-3\">\r\n                <table className=\"table mb-0\">\r\n                  <thead className=\"bg-light\">\r\n                    <tr>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        #\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Name\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Registrant\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Type\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        File Des\r\n                      </th>\r\n                      <th scope=\"col\" className=\"border-0\">\r\n                        Upload Time\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {repeatboardchild(block_list, page)}\r\n                  </tbody>\r\n                </table>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        \r\n        <Pagination\r\n              total={block_list.length}\r\n              limit={limit}\r\n              page={page}\r\n              setPage={setPage}\r\n            /> */}\r\n      </Container>\r\n    )\r\n}\r\n\r\nexport default Search_Result;\r\n\r\n","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainNavbar\\MainNavbar.js",[],"D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainFooter.js",[],"D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainSidebar\\MainSidebar.js",[],"D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\pagination.js",["398","399","400","401","402","403"],"// import styled from \"styled-components\";\r\nimport { Container, Row, Col, Card, CardHeader, CardBody, Button, Nav } from \"shards-react\";\r\n\r\nfunction Pagination({ total, limit, page, setPage }) {\r\n  const numPages = Math.ceil(total / limit);\r\n\r\n  return (\r\n    <>\r\n      <Nav>\r\n        <Button onClick={() => setPage(page - 1)} disabled={page === 1}>\r\n          &lt;\r\n        </Button>\r\n        {Array(numPages)\r\n          .fill()\r\n          .map((_, i) => (\r\n            <Button\r\n              key={i + 1}\r\n              onClick={() => setPage(i + 1)}\r\n              aria-current={page === i + 1 ? \"page\" : null}\r\n            >\r\n              {i + 1}\r\n            </Button>\r\n          ))}\r\n        <Button onClick={() => setPage(page + 1)} disabled={page === numPages}>\r\n          &gt;\r\n        </Button>\r\n      </Nav>\r\n    </>\r\n  );\r\n}\r\n\r\n// const Nav = styled.nav`\r\n//   display: flex;\r\n//   justify-content: center;\r\n//   align-items: center;\r\n//   gap: 4px;\r\n//   margin: 16px;\r\n// `;\r\n\r\n// const Button = styled.button`\r\n//   border: none;\r\n//   border-radius: 8px;\r\n//   padding: 8px;\r\n//   margin: 0;\r\n//   background: black;\r\n//   color: white;\r\n//   font-size: 1rem;\r\n\r\n//   &:hover {\r\n//     background: tomato;\r\n//     cursor: pointer;\r\n//     transform: translateY(-2px);\r\n//   }\r\n\r\n//   &[disabled] {\r\n//     background: grey;\r\n//     cursor: revert;\r\n//     transform: revert;\r\n//   }\r\n\r\n//   &[aria-current] {\r\n//     background: deeppink;\r\n//     font-weight: bold;\r\n//     cursor: revert;\r\n//     transform: revert;\r\n//   }\r\n// `;\r\n\r\nexport default Pagination;","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\Editor.js",["404","405","406","407","408","409","410"],"import React from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardHeader,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Form,\r\n  Alert\r\n} from \"shards-react\";\r\n\r\nimport CompleteFormExample from \"./elements/CompleteFormExample\"\r\n\r\nfunction Editor({transactionInstance, account}) {\r\n  return (\r\n    <Card small>\r\n    <CardHeader className=\"border-bottom\">\r\n      <h6 className=\"m-0\">Form</h6>\r\n    </CardHeader>\r\n    <CompleteFormExample transactionInstance={transactionInstance} account={account}/>\r\n  </Card>\r\n  )\r\n};\r\n\r\nexport default Editor;\r\n","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\common\\PageTitle.js",[],"D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainNavbar\\NavbarSearch.js",["411","412","413","414","415","416","417","418","419"],"import React, {Component} from \"react\";\r\nimport {\r\n  Form,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  FormInput,\r\n  Button\r\n} from \"shards-react\";\r\nimport { FormControl } from \"react-bootstrap\";\r\nimport {Link, Routes, Route, useNavigate} from 'react-router-dom';\r\n\r\nexport default class Search extends Component{ \r\n\r\nstate = {\r\n  searchText: \"\"\r\n};\r\n\r\nhandleSearchInput = event => {\r\n  this.setState({\r\n    searchText: event.target.value\r\n  });\r\n};\r\n\r\n  handleSearchSubmit = (event) => {\r\n    event.preventDefault();\r\n    window.location.replace(\"/search_result\")\r\n      // this.props.history.push({\r\n      //   pathname: \"/search_result\"\r\n      // });\r\n    \r\n    // if (sessionStorage.getItem('search')) {\r\n    //   this.props.history.push({\r\n    //     pathname: \"/results\",\r\n    //     state: {\r\n    //       searchText: this.state.searchText\r\n    //     }\r\n    //   });\r\n    // } else {\r\n    //   alert(\"Please enter some search text!\");\r\n    // }\r\n  };\r\n\r\n  \r\n\r\nrender(){\r\n  return(\r\n  <Form className=\"main-navbar__search w-100 d-none d-md-flex d-lg-flex\" onSubmit={this.handleSearchSubmit}>\r\n    {/* <InputGroup seamless className=\"ml-3\"> */}\r\n      {/* <InputGroupAddon type=\"prepend\">\r\n        <InputGroupText>\r\n          <i className=\"material-icons\">search</i>\r\n        </InputGroupText>\r\n      </InputGroupAddon> */}\r\n      <FormControl\r\n        className=\"navbar-search\"\r\n        placeholder=\"Search for something...\"\r\n        Style={{width:\"20%\"}}\r\n        // onChange={this.handleSearchInput}\r\n        // value={this.state.searchText}\r\n\r\n        onChange = {(event) => sessionStorage.setItem('search', event.target.value)}\r\n      />\r\n      \r\n      {/* <Button onClick={this.handleSearchSubmit} variant=\"outline-info\">\r\n              Search\r\n            </Button> */}\r\n    {/* </InputGroup> */}\r\n  </Form>\r\n  )\r\n}\r\n}\r\n","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainSidebar\\SidebarMainNavbar.js",[],"D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainSidebar\\SidebarNavItems.js",[],"D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainNavbar\\NavbarToggle.js",[],"D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainSidebar\\SidebarSearch.js",["420"],"import React from \"react\";\r\nimport {\r\n  Form,\r\n  FormInput,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText\r\n} from \"shards-react\";\r\n\r\nexport default () => (\r\n  <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\" style={{ display: \"flex\", minHeight: \"45px\" }}>\r\n    <InputGroup seamless className=\"ml-3\">\r\n      <InputGroupAddon type=\"prepend\">\r\n        <InputGroupText>\r\n          <i className=\"material-icons\">search</i>\r\n        </InputGroupText>\r\n        <FormInput\r\n          className=\"navbar-search\"\r\n          placeholder=\"Search for something...\"\r\n          aria-label=\"Search\"\r\n        />\r\n      </InputGroupAddon>\r\n    </InputGroup>\r\n  </Form>\r\n);\r\n","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainNavbar\\NavbarNav\\NavbarNav.js",["421","422"],"import React from \"react\";\r\nimport { Nav } from \"shards-react\";\r\n\r\nimport Notifications from \"./Notifications\";\r\nimport UserActions from \"./UserActions\";\r\n\r\nexport default () => (\r\n  <Nav navbar className=\"border-left flex-row\">\r\n    {/* <Notifications /> */}\r\n    <UserActions />\r\n  </Nav>\r\n);\r\n","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\flux\\index.js",[],"D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainSidebar\\SidebarNavItem.js",[],"D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\elements\\CompleteFormExample.js",["423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438"],"import React, { useRef, useEffect, useState } from \"react\";\r\nimport moment from 'moment';\r\n// 안써도 자동으로 한국 시간을 불러온다. 명확하게 하기 위해 import\r\nimport 'moment/locale/ko';\r\n\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  FormRadio,\r\n  FormSelect,\r\n  Button\r\n} from \"shards-react\";\r\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\r\n\r\n\r\nimport Axios from 'axios';\r\n\r\n// const ipfsClient = require('ipfs-http-client');\r\n\r\nconst projectId = '2DCS0fCRlt3GtE33WGUMaHo05dI';\r\nconst projectSecret = '1df2c89edfa1422733bd46ebf81be1fa';\r\nconst auth =\r\n    'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64');\r\n\r\nconst client = ipfsHttpClient({\r\n    host: 'infura-ipfs.io',\r\n    port: 5001,\r\n    protocol: 'https',\r\n    // apiPath: '/api/v0',\r\n    headers: {\r\n        authorization: auth,\r\n    },\r\n});\r\n\r\n// const ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\r\n\r\n\r\n\r\nfunction CompleteFormExample({transactionInstance, account}){\r\n\r\n  const [CategorySelect, setCategorySelect] = useState(\"\")\r\n  const [Filename, setFilename] = useState(\"\")\r\n  const [Filedes, setFiledes] = useState(\"\")\r\n  const [Regsitrant, setRegsitrant] = useState(\"\")\r\n  const [Responsible, setResponsible] = useState(\"\")\r\n  const [ipfsHash, setIpfsHash] = useState(\"\");\r\n  const [Filetype, setFiletype] = useState(\"\");\r\n  const [CheckListType, setCheckListType] = useState(\"\");\r\n  \r\n  const [file, setFile] = useState({})\r\n  const [fileUrl, setFileUrl] = useState('')\r\n  const [loading, setLoading] = useState(false)\r\n  const [uploaded, setUploaded] = useState(false)\r\n\r\n  const [des, setdes] = useState([0]);\r\n\r\n\r\n  const uploadFile = async (e) => {\r\n    // setLoading(true)\r\n    e.preventDefault()\r\n\r\n    try {\r\n      console.log('Error ipfs')\r\n        const added = await client.add(file);\r\n        console.log('Error ipfs')\r\n        console.log(file)\r\n        console.log(added)\r\n        const url = `https://safetymanagement.infura-ipfs.io/ipfs/${added.path}`\r\n        console.log(url)\r\n        // setUrl(url)\r\n        setFileUrl(url)\r\n        setUploaded(true)\r\n        setIpfsHash(ipfsHash => added.path)\r\n        setLoading(true)\r\n    } catch (err) {\r\n        console.log('Error uploading the file : ', err)\r\n        setLoading(false)\r\n    }\r\n}\r\n\r\nconst preUpload = (e) => {\r\n    if (e.target.value !== '') {\r\n        setFile(e.target.files[0])\r\n    } else {\r\n        setFile({})\r\n    }\r\n}\r\n\r\n  // send 전자문서 블록체인\r\n  const sendTransaction = async (e) => {\r\n\r\n    let cnt = file.name.length;\r\n    let target = '';\r\n    for(let i = cnt-1; i > 0; i-- ){\r\n      target += file.name[i];\r\n      if(file.name[i] == '.') break;\r\n    }\r\n    let temp = '';\r\n    for(let i = target.length-2; i >= 0; i--){\r\n      temp += target[i];\r\n    }\r\n    console.log(ipfsHash)\r\n    await transactionInstance.sendTrans(CategorySelect, Filename, ipfsHash, Regsitrant, Responsible, temp, Filedes,{\r\n      from: account,\r\n      //value: e.web3.utils.toWei('10', \"ether\"),\r\n      gas: 1000000\r\n    })\r\n    \r\n    let events = await transactionInstance.getPastEvents('handleTransaction', {fromBlock: 0, toBlock:'latest'});\r\n    console.log(events[events.length-1].transactionHash)\r\n    //this.updateAllTransactions();\r\n    window.location.replace(\"/\")\r\n    // submitReview();\r\n  }\r\n  \r\n  // send 체크리스트 블록체인\r\n  const sendChecklistTransaction = async (e) => {\r\n    await transactionInstance.sendCheckTrans(CategorySelect, CheckListType, Regsitrant, Responsible, des, {\r\n      from: account,\r\n      //value: e.web3.utils.toWei('10', \"ether\"),\r\n      gas: 1000000\r\n    })\r\n    \r\n    let events = await transactionInstance.getPastEvents('checkTransaction', {fromBlock: 0, toBlock:'latest'});\r\n    console.log(events)\r\n    //this.updateAllTransactions();\r\n    window.location.replace(\"/\")\r\n    // submitReview();\r\n}\r\n\r\n  // send 전자문서 db\r\n  const onClick_send_db_docu = () => {\r\n\r\n    const nowTime = moment().format('YYYY-MM-DD HH:mm:ss');\r\n    \r\n    \r\n    let cnt = file.name.length;\r\n    let target = '';\r\n    for(let i = cnt-1; i > 0; i-- ){\r\n      target += file.name[i];\r\n      if(file.name[i] == '.') break;\r\n    }\r\n    let temp = '';\r\n    for(let i = target.length-2; i >= 0; i--){\r\n      temp += target[i];\r\n    }\r\n    \r\n    var fileurl = 'https://ipfs.infura.io/ipfs/' + ipfsHash;\r\n\r\n    Axios.post('http://localhost:3001/api/insert_docu', null, {\r\n        params: {\r\n        'request_user': sessionStorage.getItem('user_id'),\r\n        'receive_user': \"bbb\",\r\n        'category': CategorySelect,\r\n        'name': Filename,\r\n        'time_stamp': nowTime,\r\n        'ipfs_hash': fileurl,\r\n        'registrant': Regsitrant,\r\n        'responsible_manager': Responsible,\r\n        'file_type': temp,\r\n        'file_des': Filedes,\r\n        'request_user_check': 0,\r\n        'receive_user_check': 0\r\n        }\r\n    })\r\n    .then(res => {\r\n    \r\n      console.log(res)\r\n      alert('등록 완료')\r\n      document.location.href = '/'\r\n    })\r\n    .catch()\r\n  }\r\n\r\n  \r\n  // send 체크리스트 db\r\n  const onClick_send_db_check = () => {\r\n\r\n    const nowTime = moment().format('YYYY-MM-DD HH:mm:ss');\r\n    \r\n\r\n    Axios.post('http://localhost:3001/api/insert_check', null, {\r\n        params: {\r\n        'request_user': sessionStorage.getItem('user_id'),\r\n        'receive_user': \"bbb\",\r\n        'category': CategorySelect,\r\n        'check_type': CheckListType,\r\n        'time_stamp': nowTime,\r\n        'registrant': Regsitrant,\r\n        'responsible_manager': Responsible,\r\n        'des1': des[0],\r\n        'des2': des[1],\r\n        'des3': des[2],\r\n        'des4': des[3],\r\n        'des5': des[4],\r\n        'des6': des[5],\r\n        'des7': des[6],\r\n        'des8': des[7],\r\n        'des9': des[8],\r\n        'des10': des[9],\r\n        'request_user_check': 0,\r\n        'receive_user_check': 0\r\n        }\r\n    })\r\n    .then(res => {\r\n    \r\n      console.log(res)\r\n      alert('등록 완료')\r\n      document.location.href = '/'\r\n    })\r\n    .catch()\r\n  }\r\n  \r\n  const category_select = (e) => {\r\n    setCategorySelect(e.target.value);\r\n    console.log(CategorySelect);\r\n  };\r\n\r\n  const checklist_select = (e) => {\r\n    setCheckListType(e.target.value);\r\n    console.log(CheckListType);\r\n  };\r\n  \r\n  const ipfsupload = (e) => {\r\n    setFileUrl(e.target.value);\r\n    // setFiletype(fileUrl);\r\n    // setLoading(true);\r\n    preUpload(e);\r\n  }\r\n\r\n  const uploadbutton = () => {\r\n    if (file.name) {\r\n    return (\r\n      <div>\r\n    {ipfsHash ? (\r\n      <h5>\r\n          Uploaded Successfully ✅\r\n      </h5>\r\n  ) : \r\n  (\r\n      <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={uploadFile}>Upload File</Button>\r\n  )}\r\n  </div>\r\n    )\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\n  const CustomFileUpload = () => {\r\n\r\n    return (\r\n    <div className=\"custom-file mb-3\">\r\n    <input type=\"file\" className=\"custom-file-input\" id=\"customFile2\" \r\n                onChange = {ipfsupload}/>\r\n    {file.name ?\r\n    \r\n       (<label className=\"custom-file-label\" htmlFor=\"customFile2\">\r\n       {file.name}\r\n        </label>) : \r\n        (<label className=\"custom-file-label\" htmlFor=\"customFile2\">\r\n       파일을 선택하세요\r\n        </label>)\r\n    }\r\n    </div>\r\n    )\r\n  }\r\n\r\n  \r\n  useEffect(() => {\r\n\r\n    if (des.length < 10){\r\n      for(let i = 0; i < 10; i++){\r\n        des.push(0);\r\n      }\r\n    }\r\n    \r\n\r\n}, );\r\n\r\n\r\n  return(\r\n    <ListGroup flush>\r\n      <ListGroupItem className=\"p-3\">\r\n        <Row>\r\n          <Col>\r\n            <Form>\r\n              <FormGroup>\r\n                <label htmlFor=\"feInputState\">카테고리</label>\r\n                <FormSelect id=\"feInputState\" value={CategorySelect} onChange={category_select}>\r\n                  {/* <option>CCTV</option> */}\r\n                  <option value = \"선택\">선택</option>\r\n                  <option value = \"Document\">전자문서</option>\r\n                  <option value = \"CheckList\">체크리스트</option>\r\n                  <option value = \"CCTV\">CCTV</option>\r\n                  <option value = \"Temp\">온도 센서</option>\r\n                  <option value = \"Pressure\">압력 센서</option>\r\n                  <option value = \"Ray\">적외선 센서</option>\r\n                  {/* <option>온도 센서</option>\r\n                  <option>압력 센서</option>\r\n                  <option>적외선 센서</option>  */}\r\n                </FormSelect>\r\n              </FormGroup>\r\n\r\n              {/* 여기서부터 */}\r\n              <div>\r\n                {CategorySelect == \"Document\" && (\r\n                  <div>\r\n                <FormGroup>\r\n                  <label htmlFor=\"feInputAddress\">파일명</label>\r\n                  <FormInput id=\"feInputAddress\" placeholder=\"파일명을 입력하세요\" onChange = {(event) => setFilename(event.target.value)}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <label htmlFor=\"feInputAddress2\">파일 설명</label>\r\n                  <FormInput\r\n                    id=\"feInputAddress2\"\r\n                    placeholder=\"파일 설명을 입력하세요\"\r\n                    onChange = {(event) => setFiledes(event.target.value)}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                  <FormInput\r\n                    id=\"feInputAddress2\"\r\n                    placeholder=\"업로더 이름을 입력하세요\"\r\n                    onChange = {(event) => setRegsitrant(event.target.value)}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                  <FormInput\r\n                    id=\"feInputAddress2\"\r\n                    placeholder=\"업로드 책임자를 입력하세요\"\r\n                    onChange = {(event) => setResponsible(event.target.value)}\r\n                  />\r\n                </FormGroup>\r\n                <strong className=\"d-block mb-2\">\r\n                  파일 업로드\r\n                </strong>\r\n                <CustomFileUpload />\r\n\r\n                {uploadbutton()}\r\n                <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={onClick_send_db_docu}>트랜잭션 업로드</Button>\r\n                {/* <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={sendTransaction}>트랜잭션 업로드</Button> */}\r\n              </div>\r\n            )}\r\n\r\n            {CategorySelect == \"CheckList\" && (\r\n              <div>\r\n                  <FormGroup>\r\n                    <label htmlFor=\"feInputState\">체크리스트</label>\r\n                    <FormSelect id=\"feInputState\" value={CheckListType} onChange={checklist_select}>\r\n                      <option value = \"선택\">선택</option>\r\n                      <option value = \"Construction\">건설기계·장비</option>\r\n                      <option value = \"Welding\">용접 작업</option>\r\n                      <option value = \"Electricity\">가설전기 및 전기공사</option>\r\n                  </FormSelect>\r\n                  </FormGroup>\r\n\r\n                  {CheckListType == \"Construction\" && (\r\n                    <div>\r\n                      <FormGroup>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <FormInput\r\n                          id=\"feInputAddress2\"\r\n                          placeholder=\"업로더 이름을 입력하세요\"\r\n                          onChange = {(event) => setRegsitrant(event.target.value)}\r\n                        />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                          <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                          <FormInput\r\n                            id=\"feInputAddress2\"\r\n                            placeholder=\"업로드 책임자를 입력하세요\"\r\n                            onChange = {(event) => setResponsible(event.target.value)}\r\n                        />\r\n                      </FormGroup>\r\n                      <label htmlFor=\"feInputAddress2\">1. 자격을 갖춘 자에게 운전을 하도록 하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"construct1\" onChange={() => {des[0] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"construct1\" onChange={() => {des[0] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">2. 형식신고 및 안전인증·검사 등 기계별 필요한 검사를 받았는지 확인했다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"construct2\" onChange={() => {des[1] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"construct2\" onChange={() => {des[1] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">3. 건설기계의 운행경로 및 작업방법을 고려해 기계별 작업계획을 수립·이행하고, 작업지휘자를 지정하여 지휘·감독했다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"construct3\" onChange={() => {des[2] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"construct3\" onChange={() => {des[2] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">4. 작업 전 운전자 및 작업자 안전교육을 실시했다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"construct4\" onChange={() => {des[3] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"construct4\" onChange={() => {des[3] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">5. 작업장소의 지형 및 지반상태를 확인하고, 기계가 넘어질 우려가 없도록 조치했다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"construct5\" onChange={() => {des[4] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"construct5\" onChange={() => {des[4] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">6. 작업구간에 작업자의 출입을 금지하거나 유도자를 배치하여 차량을 유도하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"construct6\" onChange={() => {des[5] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"construct6\" onChange={() => {des[5] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">7. 유도자는 정해진 신호방법에 따라 차량을 유도했다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"construct7\" onChange={() => {des[6] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"construct7\" onChange={() => {des[6] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">8. 건설기계는 주된 용도로만 사용하여야 했다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"construct8\" onChange={() => {des[7] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"construct8\" onChange={() => {des[7] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">9. 승차석이 아닌 곳에 작업자를 탑승시키지 않았다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"construct9\" onChange={() => {des[8] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"construct9\" onChange={() => {des[8] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">10. 지정된 제한속도를 준수하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"construct10\" onChange={() => {des[9] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"construct10\" onChange={() => {des[9] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      {/* <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={onClick_send_db_check}>트랜잭션 업로드</Button> */}\r\n                      <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={onClick_send_db_check}>트랜잭션 업로드</Button>\r\n                    </div>\r\n                  )}\r\n                  {CheckListType == \"Welding\" && (\r\n                    <div>\r\n                      <FormGroup>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <FormInput\r\n                          id=\"feInputAddress2\"\r\n                          placeholder=\"업로더 이름을 입력하세요\"\r\n                          onChange = {(event) => setRegsitrant(event.target.value)}\r\n                        />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                          <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                          <FormInput\r\n                            id=\"feInputAddress2\"\r\n                            placeholder=\"업로드 책임자를 입력하세요\"\r\n                            onChange = {(event) => setResponsible(event.target.value)}\r\n                        />\r\n                      </FormGroup>\r\n                      <label htmlFor=\"feInputAddress2\">1. 화재위험작업에 대한 작업계획을 수립하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"welding1\" onChange={() => {des[0] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"welding1\" onChange={() => {des[0] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">2. 작업장 내 위험물, 가연물의 사용·보관 현황을 파악하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"welding2\" onChange={() => {des[1] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"welding2\" onChange={() => {des[1] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">3. 위험물질로 인한 응급상황이 발생했을 때 필요한 행동에 대한 정보를 미리 준비하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"welding3\" onChange={() => {des[2] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"welding3\" onChange={() => {des[2] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">4. 작업현장에 허가받은 위험물의 종류별 기준량 이상이 되면 지역 소방기관과 관계기관에 신고하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"welding4\" onChange={() => {des[3] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"welding4\" onChange={() => {des[3] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">5. 소방서로부터 허가받은 위험물 제조소 또는 저장소 자료를 토대로 현장에 위험물의 종류별로 기준 이상의 위험물이 존재하거나 앞으로 존재하게 될 것인지의 여부를 판단하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"welding5\" onChange={() => {des[4] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"welding5\" onChange={() => {des[4] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">6. 작업자에 대해 화재예방 및 피난 교육 등을 실시하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"welding6\" onChange={() => {des[5] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"welding6\" onChange={() => {des[5] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">7. 화재위험작업 대상 작업자에게 특별안전보건교육을 실시하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"welding7\" onChange={() => {des[6] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"welding7\" onChange={() => {des[6] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">8. 산소, LPG 등 가스 용기는 전도 위험이 없는 곳에 보관하며, 사용 전 또는 사용 중인 용기와 그 밖의 용기를 명확히 구별하여 보관하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"welding8\" onChange={() => {des[7] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"welding8\" onChange={() => {des[7] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">9. 작업을 중단하거나 마치고 작업장소를 떠날 경우에는 가스 등의 공급구의 밸브나 콕을 잠구었다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"welding9\" onChange={() => {des[8] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"welding9\" onChange={() => {des[8] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">10. 인화성 가스 및 산소를 사용하여 금속을 용접·용단하는 경우, 지정된 자격증*의 보유 여부를 확인하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"welding10\" onChange={() => {des[9] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"welding10\" onChange={() => {des[9] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      {/* <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={onClick_send_db_check}>트랜잭션 업로드</Button> */}\r\n                      <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={onClick_send_db_check}>트랜잭션 업로드</Button>\r\n                    </div>\r\n                  )}\r\n                  {CheckListType == \"Electricity\" && (\r\n                    <div>\r\n                      <FormGroup>\r\n                        <label htmlFor=\"feInputAddress2\">업로더 이름</label>\r\n                        <FormInput\r\n                          id=\"feInputAddress2\"\r\n                          placeholder=\"업로더 이름을 입력하세요\"\r\n                          onChange = {(event) => setRegsitrant(event.target.value)}\r\n                        />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                          <label htmlFor=\"feInputAddress2\">업로드 책임자</label>\r\n                          <FormInput\r\n                            id=\"feInputAddress2\"\r\n                            placeholder=\"업로드 책임자를 입력하세요\"\r\n                            onChange = {(event) => setResponsible(event.target.value)}\r\n                        />\r\n                      </FormGroup>\r\n                      <label htmlFor=\"feInputAddress2\">1. 감전위험이 있는 전기 기계·기구 또는 전로의 설치·해체·정비·점검 등의 작업을 하는 하는 경우 작업자의 자격을 확인하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"elec1\" onChange={() => {des[0] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"elec1\" onChange={() => {des[0] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">2. 감전의 위험이 있는 작업에 종사하는 경우 절연용 보호구를 지급하고 작업자에게 착용하도록 하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"elec2\" onChange={() => {des[1] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"elec2\" onChange={() => {des[1] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">3. 가공전로에 근접하여 비계를 설치하는 경우에는 가공전로를 이설하거나 가공전로에 절연용 방호구를 장착하는 등 가공전로와의 접촉을 방지하기 위해 조치 하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"elec3\" onChange={() => {des[2] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"elec3\" onChange={() => {des[2] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">4. 임시 수전설비의 주변은 관계 작업자가 아닌 사람의 출입을 금지하고, 위험표시 등의 방법으로 방호를 강화하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"elec4\" onChange={() => {des[3] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"elec4\" onChange={() => {des[3] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">5. 가설 배전반·분전반은 충전부가 노출되지 않도록 폐쇄형 외함이 있는 구조로 설치하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"elec5\" onChange={() => {des[4] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"elec5\" onChange={() => {des[4] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">6. 충전부는 충분한 절연효과가 있는 방호망이나 절연덮개를 설치하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"elec6\" onChange={() => {des[5] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"elec6\" onChange={() => {des[5] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">7. 분전반 등 전기 기계·기구의 금속제 외함, 금속제 외피 및 철대는 접지를 실시하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"elec7\" onChange={() => {des[6] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"elec7\" onChange={() => {des[6] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">8. 배선 또는 이동전선의 절연피복이 손상되거나 노화됨으로 인한 감전의 위험을 방지하기 위한 조치를 하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"elec8\" onChange={() => {des[7] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"elec8\" onChange={() => {des[7] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">9. 습윤한 장소의 이동전선 및 부속 접속기구는 충분한 절연효과가 있는 것을 사용하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"elec9\" onChange={() => {des[8] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"elec9\" onChange={() => {des[8] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      <label htmlFor=\"feInputAddress2\">10. 통로바닥에 전선 또는 이동전선 등을 설치하여 사용하지 않도록 관리하였다.</label>\r\n                      <br></br>\r\n                      <FormRadio inline name=\"elec10\" onChange={() => {des[9] = 1}}>예</FormRadio>     \r\n                      <FormRadio inline name=\"elec10\" onChange={() => {des[9] = 0}}>아니요</FormRadio>\r\n                      <br></br>\r\n                      {/* <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={onClick_send_db_check}>트랜잭션 업로드</Button> */}\r\n                      <Button outline theme=\"secondary\" className=\"mb-2 mr-1\" onClick={onClick_send_db_check}>트랜잭션 업로드</Button>\r\n                    </div>\r\n                  )}\r\n\r\n              </div>\r\n            )}\r\n          </div>\r\n          {/* 여기까지 */}\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </ListGroupItem>\r\n    </ListGroup>\r\n  )\r\n                };\r\n\r\nexport default CompleteFormExample;\r\n","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainNavbar\\NavbarNav\\UserActions.js",["439","440","441","442","443","444","445","446"],"D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\layout\\MainNavbar\\NavbarNav\\Notifications.js",[],"D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\flux\\dispatcher.js",[],"D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\flux\\store.js",[],"D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\flux\\constants.js",["447"],"export default {\r\n  CHANGE: \"CHANGE\",\r\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\"\r\n};\r\n","D:\\캡스톤 Final Project\\capstone-2022\\client\\src\\components\\data\\sidebar-nav-items.js",["448"],"export default function() {\r\n  return [\r\n    {\r\n      title: \"전체보기\",\r\n      to: \"/all\",\r\n      htmlBefore: '<i class=\"material-icons\">edit</i>',\r\n      htmlAfter: \"\"\r\n    },\r\n    {\r\n      title: \"CCTV\",\r\n      htmlBefore: '<i class=\"material-icons\">vertical_split</i>',\r\n      to: \"/cctv\",\r\n    },\r\n    {\r\n      title: \"전자문서\",\r\n      htmlBefore: '<i class=\"material-icons\">note_add</i>',\r\n      to: \"/documents\",\r\n    },\r\n    {\r\n      title: \"체크리스트\",\r\n      htmlBefore: '<i class=\"material-icons\">view_module</i>',\r\n      to: \"/checklist\",\r\n    },\r\n    {\r\n      title: \"온도 센서\",\r\n      htmlBefore: '<i class=\"material-icons\">table_chart</i>',\r\n      to: \"/temp\",\r\n    },\r\n    {\r\n      title: \"압력 센서\",\r\n      htmlBefore: '<i class=\"material-icons\">person</i>',\r\n      to: \"/pressure\",\r\n    },\r\n    {\r\n      title: \"적외선 센서\",\r\n      htmlBefore: '<i class=\"material-icons\">error</i>',\r\n      to: \"/ray\",\r\n    }\r\n  ];\r\n}\r\n",{"ruleId":"449","severity":1,"message":"450","line":35,"column":17,"nodeType":"451","messageId":"452","endLine":35,"endColumn":23},{"ruleId":"449","severity":1,"message":"453","line":35,"column":25,"nodeType":"451","messageId":"452","endLine":35,"endColumn":34},{"ruleId":"449","severity":1,"message":"454","line":35,"column":36,"nodeType":"451","messageId":"452","endLine":35,"endColumn":44},{"ruleId":"449","severity":1,"message":"455","line":38,"column":8,"nodeType":"451","messageId":"452","endLine":38,"endColumn":18},{"ruleId":"456","replacedBy":"457"},{"ruleId":"458","replacedBy":"459"},{"ruleId":"449","severity":1,"message":"460","line":54,"column":10,"nodeType":"451","messageId":"452","endLine":54,"endColumn":14},{"ruleId":"449","severity":1,"message":"461","line":59,"column":22,"nodeType":"451","messageId":"452","endLine":59,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":78,"column":50,"nodeType":"464","messageId":"465","endLine":78,"endColumn":52},{"ruleId":"462","severity":1,"message":"463","line":79,"column":55,"nodeType":"464","messageId":"465","endLine":79,"endColumn":57},{"ruleId":"462","severity":1,"message":"463","line":80,"column":55,"nodeType":"464","messageId":"465","endLine":80,"endColumn":57},{"ruleId":"462","severity":1,"message":"463","line":81,"column":55,"nodeType":"464","messageId":"465","endLine":81,"endColumn":57},{"ruleId":"462","severity":1,"message":"463","line":133,"column":17,"nodeType":"464","messageId":"465","endLine":133,"endColumn":19},{"ruleId":"466","severity":1,"message":"467","line":171,"column":4,"nodeType":"468","endLine":171,"endColumn":13,"suggestions":"469"},{"ruleId":"449","severity":1,"message":"450","line":50,"column":17,"nodeType":"451","messageId":"452","endLine":50,"endColumn":23},{"ruleId":"449","severity":1,"message":"470","line":54,"column":10,"nodeType":"451","messageId":"452","endLine":54,"endColumn":16},{"ruleId":"449","severity":1,"message":"471","line":54,"column":18,"nodeType":"451","messageId":"452","endLine":54,"endColumn":23},{"ruleId":"449","severity":1,"message":"472","line":54,"column":25,"nodeType":"451","messageId":"452","endLine":54,"endColumn":29},{"ruleId":"449","severity":1,"message":"473","line":57,"column":8,"nodeType":"451","messageId":"452","endLine":57,"endColumn":14},{"ruleId":"466","severity":1,"message":"474","line":64,"column":4,"nodeType":"451","endLine":64,"endColumn":13,"suggestions":"475"},{"ruleId":"449","severity":1,"message":"450","line":187,"column":17,"nodeType":"451","messageId":"452","endLine":187,"endColumn":23},{"ruleId":"449","severity":1,"message":"453","line":187,"column":25,"nodeType":"451","messageId":"452","endLine":187,"endColumn":34},{"ruleId":"449","severity":1,"message":"454","line":187,"column":36,"nodeType":"451","messageId":"452","endLine":187,"endColumn":44},{"ruleId":"449","severity":1,"message":"476","line":212,"column":8,"nodeType":"451","messageId":"452","endLine":212,"endColumn":27},{"ruleId":"449","severity":1,"message":"477","line":213,"column":8,"nodeType":"451","messageId":"452","endLine":213,"endColumn":12},{"ruleId":"449","severity":1,"message":"478","line":214,"column":8,"nodeType":"451","messageId":"452","endLine":214,"endColumn":14},{"ruleId":"479","severity":1,"message":"480","line":239,"column":53,"nodeType":"481","messageId":"482","endLine":239,"endColumn":111},{"ruleId":"449","severity":1,"message":"450","line":1,"column":17,"nodeType":"451","messageId":"452","endLine":1,"endColumn":23},{"ruleId":"449","severity":1,"message":"453","line":1,"column":25,"nodeType":"451","messageId":"452","endLine":1,"endColumn":34},{"ruleId":"449","severity":1,"message":"483","line":11,"column":3,"nodeType":"451","messageId":"452","endLine":11,"endColumn":15},{"ruleId":"449","severity":1,"message":"455","line":16,"column":8,"nodeType":"451","messageId":"452","endLine":16,"endColumn":18},{"ruleId":"449","severity":1,"message":"472","line":22,"column":10,"nodeType":"451","messageId":"452","endLine":22,"endColumn":14},{"ruleId":"449","severity":1,"message":"484","line":22,"column":16,"nodeType":"451","messageId":"452","endLine":22,"endColumn":27},{"ruleId":"449","severity":1,"message":"478","line":23,"column":8,"nodeType":"451","messageId":"452","endLine":23,"endColumn":14},{"ruleId":"449","severity":1,"message":"485","line":29,"column":10,"nodeType":"451","messageId":"452","endLine":29,"endColumn":18},{"ruleId":"449","severity":1,"message":"450","line":1,"column":17,"nodeType":"451","messageId":"452","endLine":1,"endColumn":23},{"ruleId":"449","severity":1,"message":"453","line":1,"column":25,"nodeType":"451","messageId":"452","endLine":1,"endColumn":34},{"ruleId":"449","severity":1,"message":"486","line":8,"column":3,"nodeType":"451","messageId":"452","endLine":8,"endColumn":7},{"ruleId":"449","severity":1,"message":"483","line":11,"column":3,"nodeType":"451","messageId":"452","endLine":11,"endColumn":15},{"ruleId":"449","severity":1,"message":"487","line":12,"column":3,"nodeType":"451","messageId":"452","endLine":12,"endColumn":13},{"ruleId":"449","severity":1,"message":"455","line":16,"column":8,"nodeType":"451","messageId":"452","endLine":16,"endColumn":18},{"ruleId":"449","severity":1,"message":"478","line":23,"column":8,"nodeType":"451","messageId":"452","endLine":23,"endColumn":14},{"ruleId":"449","severity":1,"message":"488","line":33,"column":11,"nodeType":"451","messageId":"452","endLine":33,"endColumn":22},{"ruleId":"449","severity":1,"message":"486","line":10,"column":3,"nodeType":"451","messageId":"452","endLine":10,"endColumn":7},{"ruleId":"449","severity":1,"message":"489","line":11,"column":3,"nodeType":"451","messageId":"452","endLine":11,"endColumn":12},{"ruleId":"449","severity":1,"message":"490","line":12,"column":3,"nodeType":"451","messageId":"452","endLine":12,"endColumn":12},{"ruleId":"449","severity":1,"message":"483","line":13,"column":3,"nodeType":"451","messageId":"452","endLine":13,"endColumn":15},{"ruleId":"449","severity":1,"message":"487","line":14,"column":3,"nodeType":"451","messageId":"452","endLine":14,"endColumn":13},{"ruleId":"449","severity":1,"message":"491","line":15,"column":3,"nodeType":"451","messageId":"452","endLine":15,"endColumn":9},{"ruleId":"449","severity":1,"message":"492","line":21,"column":17,"nodeType":"451","messageId":"452","endLine":21,"endColumn":25},{"ruleId":"449","severity":1,"message":"461","line":23,"column":22,"nodeType":"451","messageId":"452","endLine":23,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":40,"column":16,"nodeType":"464","messageId":"465","endLine":40,"endColumn":18},{"ruleId":"462","severity":1,"message":"463","line":60,"column":29,"nodeType":"464","messageId":"465","endLine":60,"endColumn":31},{"ruleId":"462","severity":1,"message":"463","line":60,"column":51,"nodeType":"464","messageId":"465","endLine":60,"endColumn":53},{"ruleId":"462","severity":1,"message":"463","line":163,"column":42,"nodeType":"464","messageId":"465","endLine":163,"endColumn":44},{"ruleId":"462","severity":1,"message":"463","line":271,"column":47,"nodeType":"464","messageId":"465","endLine":271,"endColumn":49},{"ruleId":"462","severity":1,"message":"463","line":379,"column":47,"nodeType":"464","messageId":"465","endLine":379,"endColumn":49},{"ruleId":"493","severity":1,"message":"494","line":608,"column":15,"nodeType":"451","messageId":"495","endLine":608,"endColumn":20},{"ruleId":"462","severity":1,"message":"463","line":612,"column":58,"nodeType":"464","messageId":"465","endLine":612,"endColumn":60},{"ruleId":"462","severity":1,"message":"496","line":662,"column":28,"nodeType":"464","messageId":"465","endLine":662,"endColumn":30},{"ruleId":"449","severity":1,"message":"486","line":11,"column":3,"nodeType":"451","messageId":"452","endLine":11,"endColumn":7},{"ruleId":"449","severity":1,"message":"489","line":12,"column":3,"nodeType":"451","messageId":"452","endLine":12,"endColumn":12},{"ruleId":"449","severity":1,"message":"490","line":13,"column":3,"nodeType":"451","messageId":"452","endLine":13,"endColumn":12},{"ruleId":"449","severity":1,"message":"483","line":14,"column":3,"nodeType":"451","messageId":"452","endLine":14,"endColumn":15},{"ruleId":"449","severity":1,"message":"487","line":15,"column":3,"nodeType":"451","messageId":"452","endLine":15,"endColumn":13},{"ruleId":"449","severity":1,"message":"491","line":16,"column":3,"nodeType":"451","messageId":"452","endLine":16,"endColumn":9},{"ruleId":"449","severity":1,"message":"492","line":21,"column":17,"nodeType":"451","messageId":"452","endLine":21,"endColumn":25},{"ruleId":"449","severity":1,"message":"461","line":23,"column":22,"nodeType":"451","messageId":"452","endLine":23,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":40,"column":16,"nodeType":"464","messageId":"465","endLine":40,"endColumn":18},{"ruleId":"449","severity":1,"message":"486","line":11,"column":3,"nodeType":"451","messageId":"452","endLine":11,"endColumn":7},{"ruleId":"449","severity":1,"message":"489","line":12,"column":3,"nodeType":"451","messageId":"452","endLine":12,"endColumn":12},{"ruleId":"449","severity":1,"message":"490","line":13,"column":3,"nodeType":"451","messageId":"452","endLine":13,"endColumn":12},{"ruleId":"449","severity":1,"message":"483","line":14,"column":3,"nodeType":"451","messageId":"452","endLine":14,"endColumn":15},{"ruleId":"449","severity":1,"message":"487","line":15,"column":3,"nodeType":"451","messageId":"452","endLine":15,"endColumn":13},{"ruleId":"449","severity":1,"message":"491","line":16,"column":3,"nodeType":"451","messageId":"452","endLine":16,"endColumn":9},{"ruleId":"449","severity":1,"message":"492","line":21,"column":17,"nodeType":"451","messageId":"452","endLine":21,"endColumn":25},{"ruleId":"449","severity":1,"message":"461","line":23,"column":22,"nodeType":"451","messageId":"452","endLine":23,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":40,"column":16,"nodeType":"464","messageId":"465","endLine":40,"endColumn":18},{"ruleId":"449","severity":1,"message":"486","line":11,"column":3,"nodeType":"451","messageId":"452","endLine":11,"endColumn":7},{"ruleId":"449","severity":1,"message":"489","line":12,"column":3,"nodeType":"451","messageId":"452","endLine":12,"endColumn":12},{"ruleId":"449","severity":1,"message":"490","line":13,"column":3,"nodeType":"451","messageId":"452","endLine":13,"endColumn":12},{"ruleId":"449","severity":1,"message":"483","line":14,"column":3,"nodeType":"451","messageId":"452","endLine":14,"endColumn":15},{"ruleId":"449","severity":1,"message":"487","line":15,"column":3,"nodeType":"451","messageId":"452","endLine":15,"endColumn":13},{"ruleId":"449","severity":1,"message":"491","line":16,"column":3,"nodeType":"451","messageId":"452","endLine":16,"endColumn":9},{"ruleId":"449","severity":1,"message":"492","line":21,"column":17,"nodeType":"451","messageId":"452","endLine":21,"endColumn":25},{"ruleId":"449","severity":1,"message":"461","line":23,"column":22,"nodeType":"451","messageId":"452","endLine":23,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":40,"column":16,"nodeType":"464","messageId":"465","endLine":40,"endColumn":18},{"ruleId":"449","severity":1,"message":"486","line":11,"column":3,"nodeType":"451","messageId":"452","endLine":11,"endColumn":7},{"ruleId":"449","severity":1,"message":"489","line":12,"column":3,"nodeType":"451","messageId":"452","endLine":12,"endColumn":12},{"ruleId":"449","severity":1,"message":"490","line":13,"column":3,"nodeType":"451","messageId":"452","endLine":13,"endColumn":12},{"ruleId":"449","severity":1,"message":"483","line":14,"column":3,"nodeType":"451","messageId":"452","endLine":14,"endColumn":15},{"ruleId":"449","severity":1,"message":"487","line":15,"column":3,"nodeType":"451","messageId":"452","endLine":15,"endColumn":13},{"ruleId":"449","severity":1,"message":"491","line":16,"column":3,"nodeType":"451","messageId":"452","endLine":16,"endColumn":9},{"ruleId":"449","severity":1,"message":"492","line":21,"column":17,"nodeType":"451","messageId":"452","endLine":21,"endColumn":25},{"ruleId":"449","severity":1,"message":"461","line":23,"column":22,"nodeType":"451","messageId":"452","endLine":23,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":40,"column":16,"nodeType":"464","messageId":"465","endLine":40,"endColumn":18},{"ruleId":"449","severity":1,"message":"497","line":2,"column":37,"nodeType":"451","messageId":"452","endLine":2,"endColumn":47},{"ruleId":"449","severity":1,"message":"498","line":2,"column":49,"nodeType":"451","messageId":"452","endLine":2,"endColumn":57},{"ruleId":"449","severity":1,"message":"499","line":4,"column":8,"nodeType":"451","messageId":"452","endLine":4,"endColumn":18},{"ruleId":"449","severity":1,"message":"486","line":10,"column":3,"nodeType":"451","messageId":"452","endLine":10,"endColumn":7},{"ruleId":"449","severity":1,"message":"489","line":11,"column":3,"nodeType":"451","messageId":"452","endLine":11,"endColumn":12},{"ruleId":"449","severity":1,"message":"490","line":12,"column":3,"nodeType":"451","messageId":"452","endLine":12,"endColumn":12},{"ruleId":"449","severity":1,"message":"483","line":13,"column":3,"nodeType":"451","messageId":"452","endLine":13,"endColumn":15},{"ruleId":"449","severity":1,"message":"487","line":14,"column":3,"nodeType":"451","messageId":"452","endLine":14,"endColumn":13},{"ruleId":"449","severity":1,"message":"491","line":15,"column":3,"nodeType":"451","messageId":"452","endLine":15,"endColumn":9},{"ruleId":"449","severity":1,"message":"500","line":21,"column":10,"nodeType":"451","messageId":"452","endLine":21,"endColumn":15},{"ruleId":"449","severity":1,"message":"492","line":21,"column":17,"nodeType":"451","messageId":"452","endLine":21,"endColumn":25},{"ruleId":"449","severity":1,"message":"501","line":22,"column":16,"nodeType":"451","messageId":"452","endLine":22,"endColumn":23},{"ruleId":"449","severity":1,"message":"461","line":23,"column":22,"nodeType":"451","messageId":"452","endLine":23,"endColumn":35},{"ruleId":"449","severity":1,"message":"502","line":28,"column":10,"nodeType":"451","messageId":"452","endLine":28,"endColumn":19},{"ruleId":"449","severity":1,"message":"503","line":32,"column":9,"nodeType":"451","messageId":"452","endLine":32,"endColumn":21},{"ruleId":"462","severity":1,"message":"463","line":43,"column":16,"nodeType":"464","messageId":"465","endLine":43,"endColumn":18},{"ruleId":"504","severity":1,"message":"505","line":64,"column":17,"nodeType":"481","endLine":64,"endColumn":20},{"ruleId":"504","severity":1,"message":"505","line":65,"column":17,"nodeType":"481","endLine":65,"endColumn":20},{"ruleId":"504","severity":1,"message":"505","line":66,"column":17,"nodeType":"481","endLine":66,"endColumn":20},{"ruleId":"504","severity":1,"message":"505","line":67,"column":17,"nodeType":"481","endLine":67,"endColumn":20},{"ruleId":"504","severity":1,"message":"505","line":68,"column":17,"nodeType":"481","endLine":68,"endColumn":20},{"ruleId":"504","severity":1,"message":"505","line":69,"column":17,"nodeType":"481","endLine":69,"endColumn":20},{"ruleId":"504","severity":1,"message":"505","line":70,"column":17,"nodeType":"481","endLine":70,"endColumn":20},{"ruleId":"504","severity":1,"message":"505","line":71,"column":17,"nodeType":"481","endLine":71,"endColumn":20},{"ruleId":"504","severity":1,"message":"505","line":72,"column":17,"nodeType":"481","endLine":72,"endColumn":20},{"ruleId":"504","severity":1,"message":"505","line":73,"column":17,"nodeType":"481","endLine":73,"endColumn":20},{"ruleId":"504","severity":1,"message":"505","line":74,"column":17,"nodeType":"481","endLine":74,"endColumn":20},{"ruleId":"504","severity":1,"message":"505","line":75,"column":17,"nodeType":"481","endLine":75,"endColumn":20},{"ruleId":"504","severity":1,"message":"505","line":76,"column":17,"nodeType":"481","endLine":76,"endColumn":20},{"ruleId":"504","severity":1,"message":"505","line":77,"column":17,"nodeType":"481","endLine":77,"endColumn":20},{"ruleId":"504","severity":1,"message":"505","line":78,"column":17,"nodeType":"481","endLine":78,"endColumn":20},{"ruleId":"504","severity":1,"message":"505","line":79,"column":17,"nodeType":"481","endLine":79,"endColumn":20},{"ruleId":"504","severity":1,"message":"505","line":80,"column":17,"nodeType":"481","endLine":80,"endColumn":20},{"ruleId":"506","severity":1,"message":"507","line":152,"column":13,"nodeType":"508","messageId":"465","endLine":152,"endColumn":15},{"ruleId":"449","severity":1,"message":"486","line":11,"column":3,"nodeType":"451","messageId":"452","endLine":11,"endColumn":7},{"ruleId":"449","severity":1,"message":"489","line":12,"column":3,"nodeType":"451","messageId":"452","endLine":12,"endColumn":12},{"ruleId":"449","severity":1,"message":"490","line":13,"column":3,"nodeType":"451","messageId":"452","endLine":13,"endColumn":12},{"ruleId":"449","severity":1,"message":"483","line":14,"column":3,"nodeType":"451","messageId":"452","endLine":14,"endColumn":15},{"ruleId":"449","severity":1,"message":"487","line":15,"column":3,"nodeType":"451","messageId":"452","endLine":15,"endColumn":13},{"ruleId":"449","severity":1,"message":"491","line":16,"column":3,"nodeType":"451","messageId":"452","endLine":16,"endColumn":9},{"ruleId":"449","severity":1,"message":"492","line":21,"column":17,"nodeType":"451","messageId":"452","endLine":21,"endColumn":25},{"ruleId":"449","severity":1,"message":"461","line":23,"column":22,"nodeType":"451","messageId":"452","endLine":23,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":40,"column":16,"nodeType":"464","messageId":"465","endLine":40,"endColumn":18},{"ruleId":"462","severity":1,"message":"463","line":148,"column":42,"nodeType":"464","messageId":"465","endLine":148,"endColumn":44},{"ruleId":"462","severity":1,"message":"463","line":256,"column":47,"nodeType":"464","messageId":"465","endLine":256,"endColumn":49},{"ruleId":"462","severity":1,"message":"463","line":364,"column":47,"nodeType":"464","messageId":"465","endLine":364,"endColumn":49},{"ruleId":"462","severity":1,"message":"463","line":494,"column":57,"nodeType":"464","messageId":"465","endLine":494,"endColumn":59},{"ruleId":"449","severity":1,"message":"486","line":11,"column":3,"nodeType":"451","messageId":"452","endLine":11,"endColumn":7},{"ruleId":"449","severity":1,"message":"489","line":12,"column":3,"nodeType":"451","messageId":"452","endLine":12,"endColumn":12},{"ruleId":"449","severity":1,"message":"490","line":13,"column":3,"nodeType":"451","messageId":"452","endLine":13,"endColumn":12},{"ruleId":"449","severity":1,"message":"483","line":14,"column":3,"nodeType":"451","messageId":"452","endLine":14,"endColumn":15},{"ruleId":"449","severity":1,"message":"487","line":15,"column":3,"nodeType":"451","messageId":"452","endLine":15,"endColumn":13},{"ruleId":"449","severity":1,"message":"491","line":16,"column":3,"nodeType":"451","messageId":"452","endLine":16,"endColumn":9},{"ruleId":"449","severity":1,"message":"492","line":22,"column":17,"nodeType":"451","messageId":"452","endLine":22,"endColumn":25},{"ruleId":"449","severity":1,"message":"461","line":24,"column":22,"nodeType":"451","messageId":"452","endLine":24,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":41,"column":16,"nodeType":"464","messageId":"465","endLine":41,"endColumn":18},{"ruleId":"449","severity":1,"message":"478","line":5,"column":8,"nodeType":"451","messageId":"452","endLine":5,"endColumn":14},{"ruleId":"449","severity":1,"message":"509","line":10,"column":3,"nodeType":"451","messageId":"452","endLine":10,"endColumn":15},{"ruleId":"449","severity":1,"message":"486","line":11,"column":3,"nodeType":"451","messageId":"452","endLine":11,"endColumn":7},{"ruleId":"449","severity":1,"message":"489","line":12,"column":3,"nodeType":"451","messageId":"452","endLine":12,"endColumn":12},{"ruleId":"449","severity":1,"message":"490","line":13,"column":3,"nodeType":"451","messageId":"452","endLine":13,"endColumn":12},{"ruleId":"449","severity":1,"message":"483","line":14,"column":3,"nodeType":"451","messageId":"452","endLine":14,"endColumn":15},{"ruleId":"449","severity":1,"message":"487","line":15,"column":3,"nodeType":"451","messageId":"452","endLine":15,"endColumn":13},{"ruleId":"449","severity":1,"message":"491","line":16,"column":3,"nodeType":"451","messageId":"452","endLine":16,"endColumn":9},{"ruleId":"449","severity":1,"message":"492","line":23,"column":17,"nodeType":"451","messageId":"452","endLine":23,"endColumn":25},{"ruleId":"449","severity":1,"message":"461","line":25,"column":22,"nodeType":"451","messageId":"452","endLine":25,"endColumn":35},{"ruleId":"449","severity":1,"message":"510","line":28,"column":19,"nodeType":"451","messageId":"452","endLine":28,"endColumn":29},{"ruleId":"449","severity":1,"message":"511","line":39,"column":9,"nodeType":"451","messageId":"452","endLine":39,"endColumn":20},{"ruleId":"449","severity":1,"message":"512","line":46,"column":9,"nodeType":"451","messageId":"452","endLine":46,"endColumn":24},{"ruleId":"449","severity":1,"message":"513","line":74,"column":9,"nodeType":"451","messageId":"452","endLine":74,"endColumn":33},{"ruleId":"449","severity":1,"message":"514","line":117,"column":9,"nodeType":"451","messageId":"452","endLine":117,"endColumn":23},{"ruleId":"462","severity":1,"message":"463","line":146,"column":16,"nodeType":"464","messageId":"465","endLine":146,"endColumn":18},{"ruleId":"462","severity":1,"message":"463","line":166,"column":29,"nodeType":"464","messageId":"465","endLine":166,"endColumn":31},{"ruleId":"462","severity":1,"message":"463","line":166,"column":53,"nodeType":"464","messageId":"465","endLine":166,"endColumn":55},{"ruleId":"462","severity":1,"message":"463","line":269,"column":42,"nodeType":"464","messageId":"465","endLine":269,"endColumn":44},{"ruleId":"504","severity":1,"message":"505","line":285,"column":25,"nodeType":"481","endLine":285,"endColumn":51},{"ruleId":"462","severity":1,"message":"463","line":387,"column":47,"nodeType":"464","messageId":"465","endLine":387,"endColumn":49},{"ruleId":"504","severity":1,"message":"505","line":403,"column":25,"nodeType":"481","endLine":403,"endColumn":51},{"ruleId":"462","severity":1,"message":"463","line":504,"column":47,"nodeType":"464","messageId":"465","endLine":504,"endColumn":49},{"ruleId":"504","severity":1,"message":"505","line":520,"column":25,"nodeType":"481","endLine":520,"endColumn":51},{"ruleId":"504","severity":1,"message":"505","line":637,"column":25,"nodeType":"481","endLine":637,"endColumn":50},{"ruleId":"449","severity":1,"message":"478","line":5,"column":8,"nodeType":"451","messageId":"452","endLine":5,"endColumn":14},{"ruleId":"449","severity":1,"message":"486","line":11,"column":3,"nodeType":"451","messageId":"452","endLine":11,"endColumn":7},{"ruleId":"449","severity":1,"message":"489","line":12,"column":3,"nodeType":"451","messageId":"452","endLine":12,"endColumn":12},{"ruleId":"449","severity":1,"message":"490","line":13,"column":3,"nodeType":"451","messageId":"452","endLine":13,"endColumn":12},{"ruleId":"449","severity":1,"message":"483","line":14,"column":3,"nodeType":"451","messageId":"452","endLine":14,"endColumn":15},{"ruleId":"449","severity":1,"message":"487","line":15,"column":3,"nodeType":"451","messageId":"452","endLine":15,"endColumn":13},{"ruleId":"449","severity":1,"message":"492","line":23,"column":17,"nodeType":"451","messageId":"452","endLine":23,"endColumn":25},{"ruleId":"449","severity":1,"message":"461","line":25,"column":22,"nodeType":"451","messageId":"452","endLine":25,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":146,"column":16,"nodeType":"464","messageId":"465","endLine":146,"endColumn":18},{"ruleId":"462","severity":1,"message":"463","line":166,"column":29,"nodeType":"464","messageId":"465","endLine":166,"endColumn":31},{"ruleId":"462","severity":1,"message":"463","line":166,"column":53,"nodeType":"464","messageId":"465","endLine":166,"endColumn":55},{"ruleId":"462","severity":1,"message":"463","line":269,"column":42,"nodeType":"464","messageId":"465","endLine":269,"endColumn":44},{"ruleId":"462","severity":1,"message":"463","line":374,"column":33,"nodeType":"464","messageId":"465","endLine":374,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":380,"column":33,"nodeType":"464","messageId":"465","endLine":380,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":405,"column":47,"nodeType":"464","messageId":"465","endLine":405,"endColumn":49},{"ruleId":"462","severity":1,"message":"463","line":510,"column":33,"nodeType":"464","messageId":"465","endLine":510,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":516,"column":33,"nodeType":"464","messageId":"465","endLine":516,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":541,"column":47,"nodeType":"464","messageId":"465","endLine":541,"endColumn":49},{"ruleId":"462","severity":1,"message":"463","line":646,"column":33,"nodeType":"464","messageId":"465","endLine":646,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":652,"column":33,"nodeType":"464","messageId":"465","endLine":652,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":736,"column":33,"nodeType":"464","messageId":"465","endLine":736,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":742,"column":33,"nodeType":"464","messageId":"465","endLine":742,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":792,"column":48,"nodeType":"464","messageId":"465","endLine":792,"endColumn":50},{"ruleId":"449","severity":1,"message":"515","line":3,"column":31,"nodeType":"451","messageId":"452","endLine":3,"endColumn":35},{"ruleId":"449","severity":1,"message":"497","line":3,"column":37,"nodeType":"451","messageId":"452","endLine":3,"endColumn":47},{"ruleId":"449","severity":1,"message":"498","line":3,"column":49,"nodeType":"451","messageId":"452","endLine":3,"endColumn":57},{"ruleId":"449","severity":1,"message":"491","line":3,"column":59,"nodeType":"451","messageId":"452","endLine":3,"endColumn":65},{"ruleId":"449","severity":1,"message":"486","line":10,"column":3,"nodeType":"451","messageId":"452","endLine":10,"endColumn":7},{"ruleId":"449","severity":1,"message":"489","line":11,"column":3,"nodeType":"451","messageId":"452","endLine":11,"endColumn":12},{"ruleId":"449","severity":1,"message":"490","line":12,"column":3,"nodeType":"451","messageId":"452","endLine":12,"endColumn":12},{"ruleId":"449","severity":1,"message":"483","line":13,"column":3,"nodeType":"451","messageId":"452","endLine":13,"endColumn":15},{"ruleId":"449","severity":1,"message":"487","line":14,"column":3,"nodeType":"451","messageId":"452","endLine":14,"endColumn":13},{"ruleId":"449","severity":1,"message":"491","line":15,"column":3,"nodeType":"451","messageId":"452","endLine":15,"endColumn":9},{"ruleId":"449","severity":1,"message":"492","line":21,"column":17,"nodeType":"451","messageId":"452","endLine":21,"endColumn":25},{"ruleId":"449","severity":1,"message":"461","line":23,"column":22,"nodeType":"451","messageId":"452","endLine":23,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":40,"column":16,"nodeType":"464","messageId":"465","endLine":40,"endColumn":18},{"ruleId":"449","severity":1,"message":"516","line":2,"column":10,"nodeType":"451","messageId":"452","endLine":2,"endColumn":19},{"ruleId":"449","severity":1,"message":"517","line":2,"column":21,"nodeType":"451","messageId":"452","endLine":2,"endColumn":24},{"ruleId":"449","severity":1,"message":"518","line":2,"column":26,"nodeType":"451","messageId":"452","endLine":2,"endColumn":29},{"ruleId":"449","severity":1,"message":"515","line":2,"column":31,"nodeType":"451","messageId":"452","endLine":2,"endColumn":35},{"ruleId":"449","severity":1,"message":"497","line":2,"column":37,"nodeType":"451","messageId":"452","endLine":2,"endColumn":47},{"ruleId":"449","severity":1,"message":"498","line":2,"column":49,"nodeType":"451","messageId":"452","endLine":2,"endColumn":57},{"ruleId":"449","severity":1,"message":"516","line":3,"column":3,"nodeType":"451","messageId":"452","endLine":3,"endColumn":12},{"ruleId":"449","severity":1,"message":"517","line":4,"column":3,"nodeType":"451","messageId":"452","endLine":4,"endColumn":6},{"ruleId":"449","severity":1,"message":"518","line":5,"column":3,"nodeType":"451","messageId":"452","endLine":5,"endColumn":6},{"ruleId":"449","severity":1,"message":"519","line":8,"column":3,"nodeType":"451","messageId":"452","endLine":8,"endColumn":12},{"ruleId":"449","severity":1,"message":"520","line":9,"column":3,"nodeType":"451","messageId":"452","endLine":9,"endColumn":16},{"ruleId":"449","severity":1,"message":"486","line":10,"column":3,"nodeType":"451","messageId":"452","endLine":10,"endColumn":7},{"ruleId":"449","severity":1,"message":"521","line":11,"column":3,"nodeType":"451","messageId":"452","endLine":11,"endColumn":8},{"ruleId":"449","severity":1,"message":"522","line":4,"column":3,"nodeType":"451","messageId":"452","endLine":4,"endColumn":13},{"ruleId":"449","severity":1,"message":"523","line":5,"column":3,"nodeType":"451","messageId":"452","endLine":5,"endColumn":18},{"ruleId":"449","severity":1,"message":"524","line":6,"column":3,"nodeType":"451","messageId":"452","endLine":6,"endColumn":17},{"ruleId":"449","severity":1,"message":"489","line":7,"column":3,"nodeType":"451","messageId":"452","endLine":7,"endColumn":12},{"ruleId":"449","severity":1,"message":"491","line":8,"column":3,"nodeType":"451","messageId":"452","endLine":8,"endColumn":9},{"ruleId":"449","severity":1,"message":"472","line":11,"column":9,"nodeType":"451","messageId":"452","endLine":11,"endColumn":13},{"ruleId":"449","severity":1,"message":"470","line":11,"column":15,"nodeType":"451","messageId":"452","endLine":11,"endColumn":21},{"ruleId":"449","severity":1,"message":"471","line":11,"column":23,"nodeType":"451","messageId":"452","endLine":11,"endColumn":28},{"ruleId":"449","severity":1,"message":"484","line":11,"column":30,"nodeType":"451","messageId":"452","endLine":11,"endColumn":41},{"ruleId":"525","severity":1,"message":"526","line":10,"column":1,"nodeType":"527","endLine":25,"endColumn":3},{"ruleId":"449","severity":1,"message":"528","line":4,"column":8,"nodeType":"451","messageId":"452","endLine":4,"endColumn":21},{"ruleId":"525","severity":1,"message":"526","line":7,"column":1,"nodeType":"527","endLine":12,"endColumn":3},{"ruleId":"449","severity":1,"message":"450","line":1,"column":17,"nodeType":"451","messageId":"452","endLine":1,"endColumn":23},{"ruleId":"449","severity":1,"message":"529","line":52,"column":10,"nodeType":"451","messageId":"452","endLine":52,"endColumn":18},{"ruleId":"449","severity":1,"message":"530","line":52,"column":20,"nodeType":"451","messageId":"452","endLine":52,"endColumn":31},{"ruleId":"449","severity":1,"message":"531","line":56,"column":10,"nodeType":"451","messageId":"452","endLine":56,"endColumn":17},{"ruleId":"449","severity":1,"message":"532","line":57,"column":10,"nodeType":"451","messageId":"452","endLine":57,"endColumn":17},{"ruleId":"449","severity":1,"message":"533","line":58,"column":10,"nodeType":"451","messageId":"452","endLine":58,"endColumn":18},{"ruleId":"449","severity":1,"message":"534","line":60,"column":15,"nodeType":"451","messageId":"452","endLine":60,"endColumn":21},{"ruleId":"449","severity":1,"message":"512","line":95,"column":9,"nodeType":"451","messageId":"452","endLine":95,"endColumn":24},{"ruleId":"462","severity":1,"message":"463","line":101,"column":23,"nodeType":"464","messageId":"465","endLine":101,"endColumn":25},{"ruleId":"449","severity":1,"message":"513","line":122,"column":9,"nodeType":"451","messageId":"452","endLine":122,"endColumn":33},{"ruleId":"462","severity":1,"message":"463","line":146,"column":23,"nodeType":"464","messageId":"465","endLine":146,"endColumn":25},{"ruleId":"462","severity":1,"message":"463","line":313,"column":33,"nodeType":"464","messageId":"465","endLine":313,"endColumn":35},{"ruleId":"462","severity":1,"message":"463","line":357,"column":29,"nodeType":"464","messageId":"465","endLine":357,"endColumn":31},{"ruleId":"462","severity":1,"message":"463","line":369,"column":34,"nodeType":"464","messageId":"465","endLine":369,"endColumn":36},{"ruleId":"462","severity":1,"message":"463","line":442,"column":34,"nodeType":"464","messageId":"465","endLine":442,"endColumn":36},{"ruleId":"462","severity":1,"message":"463","line":515,"column":34,"nodeType":"464","messageId":"465","endLine":515,"endColumn":36},{"ruleId":"449","severity":1,"message":"453","line":1,"column":17,"nodeType":"451","messageId":"452","endLine":1,"endColumn":26},{"ruleId":"449","severity":1,"message":"454","line":1,"column":28,"nodeType":"451","messageId":"452","endLine":1,"endColumn":36},{"ruleId":"449","severity":1,"message":"450","line":1,"column":38,"nodeType":"451","messageId":"452","endLine":1,"endColumn":44},{"ruleId":"462","severity":1,"message":"463","line":93,"column":43,"nodeType":"464","messageId":"465","endLine":93,"endColumn":45},{"ruleId":"462","severity":1,"message":"463","line":109,"column":48,"nodeType":"464","messageId":"465","endLine":109,"endColumn":50},{"ruleId":"504","severity":1,"message":"505","line":120,"column":21,"nodeType":"481","endLine":120,"endColumn":47},{"ruleId":"462","severity":1,"message":"463","line":127,"column":48,"nodeType":"464","messageId":"465","endLine":127,"endColumn":50},{"ruleId":"504","severity":1,"message":"505","line":138,"column":21,"nodeType":"481","endLine":138,"endColumn":47},{"ruleId":"525","severity":1,"message":"535","line":1,"column":1,"nodeType":"527","endLine":4,"endColumn":3},{"ruleId":"525","severity":1,"message":"536","line":1,"column":1,"nodeType":"527","endLine":40,"endColumn":2},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'Connection' is defined but never used.","no-native-reassign",["537"],"no-negated-in-lhs",["538"],"'web3' is assigned a value but never used.","'setblock_list' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'account', 'block_list', and 'transactionInstance'. Either include them or remove the dependency array.","ArrayExpression",["539"],"'Routes' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'SignUp' is defined but never used.","React Hook useEffect contains a call to 'setIsLogin'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [isLogin] as a second argument to the useEffect Hook.",["540"],"'TransactionContract' is defined but never used.","'Web3' is defined but never used.","'moment' is defined but never used.","react/jsx-pascal-case","Imported JSX component Search_Result must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'FormCheckbox' is defined but never used.","'useNavigate' is defined but never used.","'Password' is assigned a value but never used.","'Form' is defined but never used.","'FormSelect' is defined but never used.","'routeChange' is assigned a value but never used.","'FormInput' is defined but never used.","'FormGroup' is defined but never used.","'Button' is defined but never used.","'setLimit' is assigned a value but never used.","no-redeclare","'time_' is already defined.","redeclared","Expected '!==' and instead saw '!='.","'CardHeader' is defined but never used.","'CardBody' is defined but never used.","'Pagination' is defined but never used.","'limit' is assigned a value but never used.","'setPage' is assigned a value but never used.","'detailcnt' is assigned a value but never used.","'detail_click' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-dupe-keys","Duplicate key 'id'.","ObjectExpression","'FormTextarea' is defined but never used.","'setComment' is assigned a value but never used.","'rejectOrNot' is assigned a value but never used.","'sendTransaction' is assigned a value but never used.","'sendChecklistTransaction' is assigned a value but never used.","'fail_to_upload' is assigned a value but never used.","'Card' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'Alert' is defined but never used.","'InputGroup' is defined but never used.","'InputGroupAddon' is defined but never used.","'InputGroupText' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Notifications' is defined but never used.","'Filetype' is assigned a value but never used.","'setFiletype' is assigned a value but never used.","'fileUrl' is assigned a value but never used.","'loading' is assigned a value but never used.","'uploaded' is assigned a value but never used.","'setdes' is assigned a value but never used.","Assign object to a variable before exporting as module default","Unexpected default export of anonymous function","no-global-assign","no-unsafe-negation",{"desc":"541","fix":"542"},{"desc":"543","fix":"544"},"Update the dependencies array to be: [account, block_list, loading, transactionInstance]",{"range":"545","text":"546"},"Add dependencies array: [isLogin]",{"range":"547","text":"548"},[5446,5455],"[account, block_list, loading, transactionInstance]",[2505,2505],", [isLogin]"]